<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/18/2018 9:45:23 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ADARSH"
  DTS:CreatorName="ADARSH\ADARSH RAVI"
  DTS:DTSID="{280114F3-3E23-4F68-929F-0C22D0331448}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="109"
  DTS:VersionGUID="{8F9B8032-29B1-4B05-B92A-06C2D2341729}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ADARSH.SKASkating_New]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{BD42FECB-7BA9-4FCA-A04F-410287C8D254}"
      DTS:ObjectName="ADARSH.SKASkating_New">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=ADARSH\ADARSH;Initial Catalog=SKASkating_New;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{830CF5C3-E86F-482D-9C8B-4F6132749EB7}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="H:\Courses\Data Warehousing &amp; Business Intelligence\SKA_State_County_Data_2011-2013.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="state_fips"
              DTS:DTSID="{605FC226-FBEE-47AD-8A76-F5126B7CB850}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="county_fips"
              DTS:DTSID="{E0D0FBB5-F767-4302-B70F-745D391A9659}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="fips"
              DTS:DTSID="{E8728E96-A2FC-4872-BEA7-0DCB36053D18}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{D91CBBE6-0D0E-4B9C-B485-F346284CFC9C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{435B1F75-55F8-44EF-8B0B-84BFCE535E99}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager 1]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{AFC95085-E44B-4026-BF52-DCA59AF7C727}"
      DTS:ObjectName="Flat File Connection Manager 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="H:\Courses\Data Warehousing &amp; Business Intelligence\SKA_State_County_Data_2011-2013.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="region"
              DTS:DTSID="{F0CBE131-30BC-47F6-9739-FEBBCE06AFF2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="region_code"
              DTS:DTSID="{EBC4A29B-36A6-4B97-A711-6BAE71E57129}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="period"
              DTS:DTSID="{978DF726-16A6-4337-88E9-472280D06FA4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="state_fips"
              DTS:DTSID="{C47CCD4F-6736-497F-8A5D-7744D7521FFF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="county_fips"
              DTS:DTSID="{F88AD3DD-D914-4047-B956-7B9F5F54D56D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="fips"
              DTS:DTSID="{707752FD-79FD-4359-B04E-4EB0D7BFF0F5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_providers"
              DTS:DTSID="{6487C308-CAEC-4AC2-9CA7-ACC92FA7B479}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_providers"
              DTS:DTSID="{F06D70EC-71F5-42F8-B49C-23CAF7B8C70F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_physicians"
              DTS:DTSID="{16E7000A-5834-4C44-AB99-3E2B5537967D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_physicians"
              DTS:DTSID="{3939DE5C-D67C-44D5-B4C0-9ED62FE03474}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_nurse_practitioners"
              DTS:DTSID="{F3E0AA51-8C5A-45BA-9F43-2510DA705925}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_nurse_practitioners"
              DTS:DTSID="{87823F88-1D51-4622-8C9C-DB172662A300}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_physician_assistants"
              DTS:DTSID="{B948C385-8C0E-4109-BE76-7B78B46D5196}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_physician_assistants"
              DTS:DTSID="{B283D76D-CC77-40C5-9725-683C83CA5FB9}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager 2]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{030BFE17-F383-459A-880A-8BF9299873B4}"
      DTS:ObjectName="Flat File Connection Manager 2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="H:\Courses\Data Warehousing &amp; Business Intelligence\Homework\Error.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="state_fips"
              DTS:DTSID="{C2894AD5-FF7A-4BB8-9095-111918DB3DCA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="county_fips"
              DTS:DTSID="{1CF61F94-0C2F-4098-974C-547F69A92AB4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="fips"
              DTS:DTSID="{B197FD9F-1695-4348-9114-F73F69730ED9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="region"
              DTS:DTSID="{76D1C31A-7201-4347-9F80-BC38F3A792FB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="region_code"
              DTS:DTSID="{AAF12378-9823-41EA-A645-BA5899588A1B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="period"
              DTS:DTSID="{E95E17A1-ABDE-43A9-8A84-3AD139C1725E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_providers"
              DTS:DTSID="{B97F0A42-D41D-401C-AB5B-05FF304CE1A6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_providers"
              DTS:DTSID="{F6D331CD-1BFF-4E13-BB55-09D87360907F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_physicians"
              DTS:DTSID="{E527B7F1-40CB-4134-95F4-EC6E533B4928}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_physicians"
              DTS:DTSID="{2A2D9B06-F5F5-43B2-B635-24BB06067A73}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_nurse_practitioners"
              DTS:DTSID="{01F1BB56-F08E-4DB4-BC02-552C85B6DDE4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_nurse_practitioners"
              DTS:DTSID="{C007362B-6A78-4735-8C5F-3A3BA5169E2E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_physician_assistants"
              DTS:DTSID="{803C031E-3086-471B-9875-6A4CCB240039}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_physician_assistants"
              DTS:DTSID="{F8C52E22-63D1-4020-A635-6DB19EA37538}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="1"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="IsState"
              DTS:DTSID="{7310935B-DB6B-4192-AE82-3896B1412A30}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{05EEB9AB-0D92-4B13-9543-97944FF1620D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{78D94B7C-86E5-48D3-AEC8-F697AC14B631}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager 3]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{8CBAE986-47C0-414D-B9CA-5986DB17F52B}"
      DTS:ObjectName="Flat File Connection Manager 3">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="H:\Courses\Data Warehousing &amp; Business Intelligence\Homework\Assignment 1\IS_Assignment1\Fail.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.state_fips"
              DTS:DTSID="{003D7FCF-2AFC-4D1A-AD11-58D678E66481}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.period"
              DTS:DTSID="{275FAE3D-5028-4314-BA66-3AF7065D6599}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_providers"
              DTS:DTSID="{1FBA954E-B771-44EE-AC5C-EC1C79589410}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_primary_care_providers"
              DTS:DTSID="{F6BC146E-B0FF-4EE8-911E-CC81F09D043C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_physicians"
              DTS:DTSID="{ADEB8958-C12F-4ABD-A865-87CD8701B8A7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_primary_care_physicians"
              DTS:DTSID="{FAA9A38C-D420-4813-AAA3-E4B409B3E009}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_nurse_practitioners"
              DTS:DTSID="{7C77B2DB-637D-4088-A5D1-45C7F56414CB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_primary_care_nurse_practitioners"
              DTS:DTSID="{268661DD-D82C-415F-BDDC-1257971CCB76}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_physician_assistants"
              DTS:DTSID="{7D08620D-D579-4141-BE17-849A84CEBD5E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_primary_care_physician_assistants"
              DTS:DTSID="{594C51A3-4AFF-4B41-94D6-085BF40ED8B9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_providers"
              DTS:DTSID="{E9AC0E41-C710-4069-A0CD-9F294EF2563D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_providers"
              DTS:DTSID="{B41DE5B8-D49B-4397-BC0A-1CD134AFA1A6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_physicians"
              DTS:DTSID="{050D76E0-049B-4F24-B448-841DF394703E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_physicians"
              DTS:DTSID="{20AF9CC9-5989-4F26-A7B0-A3F8A4849892}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_physician_assistants"
              DTS:DTSID="{2AAFA54A-4F92-45A1-AD60-6C826D4797A5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_nurse_practitioners"
              DTS:DTSID="{81988289-51A7-443A-902F-11B927BC67F4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_nurse_practitioners"
              DTS:DTSID="{0F0BF8FD-1F36-4FE5-8899-04C55BB0ED75}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_physician_assistants"
              DTS:DTSID="{54A22A02-35DB-4C42-A611-ED5D61D09D53}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="state_fips"
              DTS:DTSID="{5EF3EB25-A31A-4211-9B81-7EBFD547A2E9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="period"
              DTS:DTSID="{DF6B052D-0295-4E20-9BC3-871DFE6B3268}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="11"
              DTS:TextQualified="True"
              DTS:ObjectName="NotMatching"
              DTS:DTSID="{333AE207-C4C9-4AF3-9DE5-5CE30334D0B9}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager 4]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{96DC51A0-493F-4B53-A9AA-314AD4E09E8E}"
      DTS:ObjectName="Flat File Connection Manager 4">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="H:\Courses\Data Warehousing &amp; Business Intelligence\Homework\Assignment 1\IS_Assignment1\Success.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.state_fips"
              DTS:DTSID="{EFC07A76-FCB9-4360-95A1-A4C393B5EEB0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.period"
              DTS:DTSID="{956AE46F-5053-4DF9-8892-376A0A7FF80C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_providers"
              DTS:DTSID="{4F9B1F42-6008-4167-91E1-5FBFEB5C3C73}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_primary_care_providers"
              DTS:DTSID="{DDBB4902-A6EF-4455-B4AB-C3A166738339}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_physicians"
              DTS:DTSID="{1F23920D-E717-4748-A478-304813249C79}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_primary_care_physicians"
              DTS:DTSID="{080B5FAC-BBEC-4D33-BF60-7A36E8BD6BA6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_nurse_practitioners"
              DTS:DTSID="{21A035F7-10E1-4847-BC93-3043DEC8A469}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_primary_care_nurse_practitioners"
              DTS:DTSID="{05DB041B-C5C6-4998-8D8E-2415E25BD3B6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_physician_assistants"
              DTS:DTSID="{686E720F-2962-4A35-898C-32EB4D2B0C8E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_primary_care_physician_assistants"
              DTS:DTSID="{C8363D22-C6F1-4BC9-841D-0ED595FBAD38}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_providers"
              DTS:DTSID="{18462247-36AD-4C3B-88A9-0BD30415EE83}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_providers"
              DTS:DTSID="{244883FF-5B20-49F9-9B9F-F9A930658B97}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_physicians"
              DTS:DTSID="{437141F4-47D1-4751-978E-D05F94D09E9E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_physicians"
              DTS:DTSID="{56AF7725-9BAD-4AFB-90F7-05E9DFEC8470}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_physician_assistants"
              DTS:DTSID="{F761B85A-5A13-4EE2-8614-6A0984513060}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_nurse_practitioners"
              DTS:DTSID="{2938C330-250B-458F-8EA4-19E45970AE55}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_nurse_practitioners"
              DTS:DTSID="{C235BDAF-4D9F-44D6-BDBF-ECE79A3985A1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_physician_assistants"
              DTS:DTSID="{16DC5646-6CD9-4E64-9781-E7F274DCF940}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="state_fips"
              DTS:DTSID="{3DCB4904-F43B-40F4-8B1D-E2EBFA2C4147}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="period"
              DTS:DTSID="{3938B9E2-3E7A-4ABD-B76F-D650178AAF43}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="11"
              DTS:TextQualified="True"
              DTS:ObjectName="NotMatching"
              DTS:DTSID="{406BADBB-7579-48F3-99DC-D3C78791E595}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[TempFile Connection]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{5392921D-D88E-4512-A6C6-4B0B84A2A938}"
      DTS:ObjectName="TempFile Connection">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="H:\Courses\Data Warehousing &amp; Business Intelligence\Homework\Assignment 1\IS_Assignment1\TempFile.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="period"
              DTS:DTSID="{CB53A388-38D6-4054-A588-359B25A180A4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="fips"
              DTS:DTSID="{A494E91E-4FE7-4A21-B1AF-916CCDCBA4A0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="all_providers"
              DTS:DTSID="{95F6E22E-805F-4A66-8544-AD5208F4367F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_providers"
              DTS:DTSID="{4AF382A4-3DC3-4706-BEE0-0EDF66A4B72F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="all_physicians"
              DTS:DTSID="{E371ACE5-648B-4BD5-85B0-F42958865F03}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_physicians"
              DTS:DTSID="{DD501E0C-38C7-4D44-A00B-007FD9029D14}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="all_nurse_practitioners"
              DTS:DTSID="{9091C511-B862-426A-98B1-2AADEC6CABAC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_nurse_practitioners"
              DTS:DTSID="{35641049-38D7-421E-A8EF-6D903B83A125}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="all_physician_assistants"
              DTS:DTSID="{795DC4D9-39E7-4B20-8B7A-04FF3F2E935E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_physician_assistants"
              DTS:DTSID="{7800C024-6BBE-4EEB-9260-0BA242E1DF67}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="state_fips"
              DTS:DTSID="{82B50E2A-3B3E-4803-A288-30DC73E2EB2A}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Test]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{D38E95EB-5719-4132-88D5-ADE4723400DB}"
      DTS:ObjectName="Test">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="H:\Courses\Data Warehousing &amp; Business Intelligence\Homework\Assignment 1\IS_Assignment1\NewTemp.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.state_fips"
              DTS:DTSID="{73139071-BB03-4761-B501-809924089C61}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.fips"
              DTS:DTSID="{5B250A7A-FDB8-47D8-A779-74A3450A25C4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.period"
              DTS:DTSID="{8C8D5BD7-01B0-4FFD-9F9D-DD5FC3469179}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_providers"
              DTS:DTSID="{B4AB3C3E-212D-4150-9B6F-93A0CB17D0BE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_primary_care_providers"
              DTS:DTSID="{C32815C7-40F2-4A30-8425-FED7E0693EDF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_physicians"
              DTS:DTSID="{B5EB7532-1B45-4323-A0F9-4C4E7CE407B2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_primary_care_physicians"
              DTS:DTSID="{801B7638-1F0D-4008-9BB5-218ABB1D1FEA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_nurse_practitioners"
              DTS:DTSID="{13DFCAA9-8952-49BD-A9E4-6C2F595954D8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_primary_care_nurse_practitioners"
              DTS:DTSID="{5EA4B010-A877-43D5-AD1E-71542C19F6E6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_physician_assistants"
              DTS:DTSID="{B28DABFC-9331-4843-B7C9-402B01F61BD7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Data Conversion.all_primary_care_physician_assistants"
              DTS:DTSID="{C88C770E-C704-4979-8F0C-E4B11D02A364}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_providers"
              DTS:DTSID="{A84CA465-2FD3-4CED-961E-C7310C77021B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_providers"
              DTS:DTSID="{AEDC6918-60A3-4629-85D6-34FE86E79674}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_physicians"
              DTS:DTSID="{DA0BBF6A-814E-4E1E-8F54-5335A1A49797}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_physicians"
              DTS:DTSID="{A1728A7C-632A-408E-BDCB-002ABA42535E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_physician_assistants"
              DTS:DTSID="{6EBA4C37-315A-4DD5-9EE8-6E6FCD964821}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_nurse_practitioners"
              DTS:DTSID="{98BB30EB-D28F-4F10-98CF-BD68A972624E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_nurse_practitioners"
              DTS:DTSID="{D037F8A7-68C1-4777-A087-4520EF44820A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="all_primary_care_physician_assistants"
              DTS:DTSID="{0FEF56DD-50ED-42B0-9E89-AE49D7F6EF24}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="state_fips"
              DTS:DTSID="{E68FB704-A27F-4556-B2CF-12E38C796872}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="period"
              DTS:DTSID="{6B341928-20F5-46B9-A8F4-D5261991A2D9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="fips"
              DTS:DTSID="{0AE85AAE-32BD-42A2-8FE8-1BF145D4097C}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{DBDFC3DE-3542-4D72-AC4C-605678B71F9A}"
      DTS:ObjectName="IsComplete">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{43C08DDC-0219-4CF0-8F89-B10C02913A03}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InsertDateTime">
      <DTS:VariableValue
        DTS:DataType="7">10/23/2018 1:37:58 PM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Move Data from CSV to a Staging Table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{404BF926-D803-4661-862A-0276BC97450B}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Move Data from CSV to a Staging Table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Move Data from CSV to a Staging Table\Read CSV File"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Read CSV File"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager 1]"
                  connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager 1]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[region]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[region]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[region]"
                      name="region"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[region_code]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[region_code]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[region_code]"
                      name="region_code"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[period]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[period]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[period]"
                      name="period"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[state_fips]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[state_fips]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[state_fips]"
                      name="state_fips"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[county_fips]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[county_fips]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[county_fips]"
                      name="county_fips"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[fips]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[fips]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[fips]"
                      name="fips"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_providers]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_providers]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_providers]"
                      name="all_providers"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_primary_care_providers]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_primary_care_providers]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_primary_care_providers]"
                      name="all_primary_care_providers"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_physicians]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_physicians]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_physicians]"
                      name="all_physicians"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_primary_care_physicians]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_primary_care_physicians]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_primary_care_physicians]"
                      name="all_primary_care_physicians"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_nurse_practitioners]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_nurse_practitioners]"
                      name="all_nurse_practitioners"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_primary_care_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_primary_care_nurse_practitioners]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_primary_care_nurse_practitioners]"
                      name="all_primary_care_nurse_practitioners"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_physician_assistants]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_physician_assistants]"
                      name="all_physician_assistants"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_primary_care_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_primary_care_physician_assistants]"
                      length="50"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_primary_care_physician_assistants]"
                      name="all_primary_care_physician_assistants"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[region]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="region" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[region_code]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="region_code" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[period]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="period" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[state_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="state_fips" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[county_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="county_fips" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="fips" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_providers" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_primary_care_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_providers" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_primary_care_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_nurse_practitioners" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_primary_care_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_nurse_practitioners" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_physician_assistants" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].ExternalColumns[all_primary_care_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_physician_assistants" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Send Data to Staging Table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[SKA_State_County_Data_CSV]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[ADARSH.SKASkating_New]"
                  connectionManagerRefId="Package.ConnectionManagers[ADARSH.SKASkating_New]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[region]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="region"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[region]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[region]" />
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[region_code]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="region_code"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[region_code]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[region_code]" />
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[period]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="period"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[period]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[period]" />
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[state_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="state_fips"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[state_fips]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[state_fips]" />
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[county_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="county_fips"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[county_fips]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[county_fips]" />
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="fips"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[fips]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[fips]" />
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[all_providers]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_providers"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_providers]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_providers]" />
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[all_primary_care_providers]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_providers"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_providers]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_primary_care_providers]" />
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[all_physicians]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_physicians"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_physicians]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_physicians]" />
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[all_primary_care_physicians]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_physicians"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_physicians]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_primary_care_physicians]" />
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[all_nurse_practitioners]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_nurse_practitioners"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_nurse_practitioners]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[all_primary_care_nurse_practitioners]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_nurse_practitioners"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_nurse_practitioners]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_primary_care_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[all_physician_assistants]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_physician_assistants"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_physician_assistants]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].Columns[all_primary_care_physician_assistants]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_physician_assistants"
                      externalMetadataColumnId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_physician_assistants]"
                      lineageId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output].Columns[all_primary_care_physician_assistants]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[region]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="region" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[region_code]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="region_code" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[period]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="period" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[state_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="state_fips" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[county_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="county_fips" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="fips" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_providers" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_providers" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_nurse_practitioners" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_nurse_practitioners" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_physician_assistants" />
                    <externalMetadataColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_physician_assistants" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Move Data from CSV to a Staging Table.Paths[Flat File Source Output]"
              endId="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table.Inputs[OLE DB Destination Input]"
              name="Flat File Source Output"
              startId="Package\Move Data from CSV to a Staging Table\Read CSV File.Outputs[Flat File Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Move Data from Staging Table to Region and County Tables"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{D440425A-217E-4EE0-876F-5D76F3AA952F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Move Data from Staging Table to Region and County Tables"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Check IsState Comumn Value and Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Inputs[Conditional Split Input].Columns[IsState]"
                      cachedDataType="wstr"
                      cachedLength="1"
                      cachedName="IsState"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Outputs[Derived Column Output].Columns[IsState]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Outputs[State]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="State"
                  synchronousInputId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Outputs[Derived Column Output].Columns[IsState]} == "T"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">IsState == "T"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Outputs[County]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="County"
                  synchronousInputId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Outputs[Derived Column Output].Columns[IsState]} == "F"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">IsState == "F"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Generate IsState Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Inputs[Derived Column Input].Columns[county_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="county_fips"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]" />
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Inputs[Derived Column Input].Columns[state_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="state_fips"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Outputs[Derived Column Output].Columns[IsState]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="1"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Outputs[Derived Column Output].Columns[IsState]"
                      name="IsState"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I4)#{Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]} != 0 &amp;&amp; [LEN](#{Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]}) &lt; 1 ? "T" : "F"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I4)state_fips != 0 &amp;&amp; LEN(county_fips) &lt; 1 ? "T" : "F"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Group by County Columns"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Inputs[Aggregate Input 1].Columns[state_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="state_fips"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]" />
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Inputs[Aggregate Input 1].Columns[county_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="county_fips"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]" />
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Inputs[Aggregate Input 1].Columns[fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="fips"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[fips]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Outputs[Aggregate Output 1].Columns[state_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Outputs[Aggregate Output 1].Columns[state_fips]"
                      name="state_fips">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Outputs[Aggregate Output 1].Columns[county_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Outputs[Aggregate Output 1].Columns[county_fips]"
                      name="county_fips">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Outputs[Aggregate Output 1].Columns[fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Outputs[Aggregate Output 1].Columns[fips]"
                      name="fips">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[fips]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Group the State Columns"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Inputs[Aggregate Input 1].Columns[region]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="region"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[region]" />
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Inputs[Aggregate Input 1].Columns[region_code]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="region_code"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[region_code]" />
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Inputs[Aggregate Input 1].Columns[state_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="state_fips"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Outputs[Aggregate Output 1].Columns[region]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Outputs[Aggregate Output 1].Columns[region]"
                      name="region">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[region]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Outputs[Aggregate Output 1].Columns[region_code]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Outputs[Aggregate Output 1].Columns[region_code]"
                      name="region_code">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[region_code]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Outputs[Aggregate Output 1].Columns[state_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Outputs[Aggregate Output 1].Columns[state_fips]"
                      name="state_fips">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Read Data from Staging Table"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[SKA_State_County_Data_CSV]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[ADARSH.SKASkating_New]"
                  connectionManagerRefId="Package.ConnectionManagers[ADARSH.SKASkating_New]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[region]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[region]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[region]"
                      name="region"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[region_code]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[region_code]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[region_code]"
                      name="region_code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[period]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[period]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[period]"
                      name="period"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[state_fips]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]"
                      name="state_fips"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[county_fips]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]"
                      name="county_fips"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[fips]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[fips]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[fips]"
                      name="fips"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_providers]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_providers]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_providers]"
                      name="all_providers"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_providers]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_providers]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_providers]"
                      name="all_primary_care_providers"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physicians]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_physicians]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physicians]"
                      name="all_physicians"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physicians]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_physicians]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physicians]"
                      name="all_primary_care_physicians"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_nurse_practitioners]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_nurse_practitioners]"
                      name="all_nurse_practitioners"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_nurse_practitioners]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_nurse_practitioners]"
                      name="all_primary_care_nurse_practitioners"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_physician_assistants]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physician_assistants]"
                      name="all_physician_assistants"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_physician_assistants]"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physician_assistants]"
                      name="all_primary_care_physician_assistants"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[region]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="region" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[region_code]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="region_code" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[period]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="period" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[state_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="state_fips" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[county_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="county_fips" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="fips" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_providers" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_providers" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_nurse_practitioners" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_nurse_practitioners" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_physician_assistants" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_physician_assistants" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[region]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[region]"
                      name="region" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[region_code]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[region_code]"
                      name="region_code" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[period]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[period]"
                      name="period" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[state_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[state_fips]"
                      name="state_fips" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[county_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[county_fips]"
                      name="county_fips" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[fips]"
                      name="fips" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_providers]"
                      name="all_providers" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_providers]"
                      name="all_primary_care_providers" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_physicians]"
                      name="all_physicians" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_physicians]"
                      name="all_primary_care_physicians" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_nurse_practitioners]"
                      name="all_nurse_practitioners" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_nurse_practitioners]"
                      name="all_primary_care_nurse_practitioners" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_physician_assistants]"
                      name="all_physician_assistants" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_physician_assistants]"
                      name="all_primary_care_physician_assistants" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Remove Rows with NULL valuesin County_fips Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Inputs[Conditional Split Input].Columns[county_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="county_fips"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Outputs[County]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="County"
                  synchronousInputId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEN](#{Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]}) &gt; 0</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEN(county_fips) &gt; 0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Send Data to County Data"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[County]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">true</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[ADARSH.SKASkating_New]"
                  connectionManagerRefId="Package.ConnectionManagers[ADARSH.SKASkating_New]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Inputs[OLE DB Destination Input].Columns[county_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="county_fips"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Inputs[OLE DB Destination Input].ExternalColumns[county_fips]"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Outputs[Aggregate Output 1].Columns[county_fips]" />
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Inputs[OLE DB Destination Input].Columns[fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="fips"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Inputs[OLE DB Destination Input].ExternalColumns[fips]"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Outputs[Aggregate Output 1].Columns[fips]" />
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Inputs[OLE DB Destination Input].Columns[state_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="state_fips"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Inputs[OLE DB Destination Input].ExternalColumns[state_fips_fk]"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Outputs[Aggregate Output 1].Columns[state_fips]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Inputs[OLE DB Destination Input].ExternalColumns[fips]"
                      dataType="numeric"
                      name="fips"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Inputs[OLE DB Destination Input].ExternalColumns[state_fips_fk]"
                      dataType="i4"
                      name="state_fips_fk" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Inputs[OLE DB Destination Input].ExternalColumns[county_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="county_fips" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Send Data to Region Table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Region]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">true</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[ADARSH.SKASkating_New]"
                  connectionManagerRefId="Package.ConnectionManagers[ADARSH.SKASkating_New]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Inputs[OLE DB Destination Input].Columns[region]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="region"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Inputs[OLE DB Destination Input].ExternalColumns[region]"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Outputs[Aggregate Output 1].Columns[region]" />
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Inputs[OLE DB Destination Input].Columns[region_code]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="region_code"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Inputs[OLE DB Destination Input].ExternalColumns[region_code]"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Outputs[Aggregate Output 1].Columns[region_code]" />
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Inputs[OLE DB Destination Input].Columns[state_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="state_fips"
                      externalMetadataColumnId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Inputs[OLE DB Destination Input].ExternalColumns[state_fips]"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Outputs[Aggregate Output 1].Columns[state_fips]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Inputs[OLE DB Destination Input].ExternalColumns[state_fips]"
                      dataType="i4"
                      name="state_fips" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Inputs[OLE DB Destination Input].ExternalColumns[region]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="region" />
                    <externalMetadataColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Inputs[OLE DB Destination Input].ExternalColumns[region_code]"
                      codePage="1252"
                      dataType="str"
                      length="3"
                      name="region_code" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Typecast the county_fips column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Inputs[Data Conversion Input].Columns[county_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="county_fips"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Outputs[Aggregate Output 1].Columns[county_fips]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Outputs[Data Conversion Output].Columns[Copy of county_fips]"
                      dataType="ui8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Outputs[Data Conversion Output].Columns[Copy of county_fips]"
                      name="Copy of county_fips"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Outputs[Aggregate Output 1].Columns[county_fips]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Move Data from Staging Table to Region and County Tables.Paths[Aggregate Output 1]"
              endId="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table.Inputs[OLE DB Destination Input]"
              name="Aggregate Output 1"
              startId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\Move Data from Staging Table to Region and County Tables.Paths[Aggregate Output 11]"
              endId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Inputs[Data Conversion Input]"
              name="Aggregate Output 1"
              startId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\Move Data from Staging Table to Region and County Tables.Paths[County]"
              endId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Inputs[Conditional Split Input]"
              name="County"
              startId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Outputs[County]" />
            <path
              refId="Package\Move Data from Staging Table to Region and County Tables.Paths[County1]"
              endId="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns.Inputs[Aggregate Input 1]"
              name="County"
              startId="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column.Outputs[County]" />
            <path
              refId="Package\Move Data from Staging Table to Region and County Tables.Paths[Data Conversion Output]"
              endId="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data.Inputs[OLE DB Destination Input]"
              name="Data Conversion Output"
              startId="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Move Data from Staging Table to Region and County Tables.Paths[Derived Column Output]"
              endId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Inputs[Conditional Split Input]"
              name="Derived Column Output"
              startId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Move Data from Staging Table to Region and County Tables.Paths[OLE DB Source Output]"
              endId="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Move Data from Staging Table to Region and County Tables.Paths[State]"
              endId="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns.Inputs[Aggregate Input 1]"
              name="State"
              startId="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split.Outputs[State]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Move data from Staging Table to SKA_State_County_Data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{8705AD7E-30CE-4095-B6E4-8C367B818BE3}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Move data from Staging Table to SKA_State_County_Data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add InsertDateTime Column to the Data"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Outputs[Derived Column Output].Columns[InsertDateTime]"
                      dataType="date"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Outputs[Derived Column Output].Columns[InsertDateTime]"
                      name="InsertDateTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[User::InsertDateTime]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[User::InsertDateTime]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Check if the sum of county data matches state data and derieve a new column NotMatched"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[Data Conversion.all_providers]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[Data Conversion.all_primary_care_providers]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_primary_care_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[Data Conversion.all_physicians]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[Data Conversion.all_primary_care_physicians]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_primary_care_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[Data Conversion.all_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[Data Conversion.all_primary_care_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_primary_care_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[Data Conversion.all_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[Data Conversion.all_primary_care_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_primary_care_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[all_providers]"
                      cachedDataType="i8"
                      cachedName="all_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[all_primary_care_providers]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[all_physicians]"
                      cachedDataType="i8"
                      cachedName="all_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[all_primary_care_physicians]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[all_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="all_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[all_primary_care_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[all_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="all_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input].Columns[all_primary_care_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_physician_assistants]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Outputs[Derived Column Output].Columns[NotMatching]"
                      dataType="bool"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Outputs[Derived Column Output].Columns[NotMatching]"
                      name="NotMatching"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_providers]} != #{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_providers]}) || (#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_providers]} != #{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_providers]}) || (#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_physicians]} != #{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_physicians]}) || (#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_physicians]} != #{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_physicians]}) || (#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_nurse_practitioners]} != #{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_nurse_practitioners]}) || (#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_nurse_practitioners]} != #{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_nurse_practitioners]}) || (#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_physician_assistants]} != #{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_physician_assistants]}) || (#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_physician_assistants]} != #{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_physician_assistants]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(all_providers != [Data Conversion.all_providers]) || (all_primary_care_providers != [Data Conversion.all_primary_care_providers]) || ([Data Conversion.all_physicians] != all_physicians) || ([Data Conversion.all_primary_care_physicians] != all_primary_care_physicians) || ([Data Conversion.all_nurse_practitioners] != all_nurse_practitioners) || ([Data Conversion.all_primary_care_nurse_practitioners] != all_primary_care_nurse_practitioners) || ([Data Conversion.all_physician_assistants] != all_physician_assistants) || ([Data Conversion.all_primary_care_physician_assistants] != all_primary_care_physician_assistants)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Check type of data and derive new column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Inputs[Derived Column Input].Columns[state_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="state_fips"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Inputs[Derived Column Input].Columns[county_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="county_fips"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Output].Columns[IsState]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="1"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Output].Columns[IsState]"
                      name="IsState"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I4)#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]} != 0 &amp;&amp; [LEN](#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]}) &lt; 1 ? "T" : "F"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I4)state_fips != 0 &amp;&amp; LEN(county_fips) &lt; 1 ? "T" : "F"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion of all Columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input].Columns[state_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="state_fips"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input].Columns[period]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="period"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[period]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input].Columns[all_providers]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input].Columns[all_primary_care_providers]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input].Columns[all_physicians]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input].Columns[all_primary_care_physicians]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input].Columns[all_nurse_practitioners]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input].Columns[all_primary_care_nurse_practitioners]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input].Columns[all_physician_assistants]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input].Columns[all_primary_care_physician_assistants]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physician_assistants]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[state_fips]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[state_fips]"
                      name="state_fips"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[period]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[period]"
                      name="period"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[period]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_providers]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_providers]"
                      name="all_providers"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_providers]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_providers]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_providers]"
                      name="all_primary_care_providers"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_providers]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_physicians]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_physicians]"
                      name="all_physicians"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physicians]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_physicians]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_physicians]"
                      name="all_primary_care_physicians"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physicians]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_nurse_practitioners]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_nurse_practitioners]"
                      name="all_nurse_practitioners"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_nurse_practitioners]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_nurse_practitioners]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_nurse_practitioners]"
                      name="all_primary_care_nurse_practitioners"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_nurse_practitioners]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_physician_assistants]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_physician_assistants]"
                      name="all_physician_assistants"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physician_assistants]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_physician_assistants]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_physician_assistants]"
                      name="all_primary_care_physician_assistants"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physician_assistants]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Group by State_fips &amp; Year and sum all other value columns"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Inputs[Aggregate Input 1].Columns[all_providers]"
                      cachedDataType="i4"
                      cachedName="all_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Inputs[Aggregate Input 1].Columns[all_primary_care_providers]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Inputs[Aggregate Input 1].Columns[all_physicians]"
                      cachedDataType="i4"
                      cachedName="all_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Inputs[Aggregate Input 1].Columns[all_primary_care_physicians]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Inputs[Aggregate Input 1].Columns[all_physician_assistants]"
                      cachedDataType="i4"
                      cachedName="all_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Inputs[Aggregate Input 1].Columns[all_primary_care_nurse_practitioners]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Inputs[Aggregate Input 1].Columns[all_nurse_practitioners]"
                      cachedDataType="i4"
                      cachedName="all_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Inputs[Aggregate Input 1].Columns[all_primary_care_physician_assistants]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Inputs[Aggregate Input 1].Columns[state_fips]"
                      cachedDataType="i4"
                      cachedName="state_fips"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[state_fips]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Inputs[Aggregate Input 1].Columns[period]"
                      cachedDataType="i4"
                      cachedName="period"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[period]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_providers]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_providers]"
                      name="all_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_providers]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_providers]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_providers]"
                      name="all_primary_care_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_providers]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_physicians]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_physicians]"
                      name="all_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_physicians]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_physicians]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_physicians]"
                      name="all_primary_care_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_physicians]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_physician_assistants]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_physician_assistants]"
                      name="all_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_physician_assistants]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_nurse_practitioners]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_nurse_practitioners]"
                      name="all_primary_care_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_nurse_practitioners]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_nurse_practitioners]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_nurse_practitioners]"
                      name="all_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_nurse_practitioners]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_physician_assistants]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_physician_assistants]"
                      name="all_primary_care_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_physician_assistants]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[state_fips]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[state_fips]"
                      name="state_fips">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[state_fips]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[period]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[period]"
                      name="period">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[period]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Group by Year and State_fips"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips.Inputs[Aggregate Input 1].Columns[period]"
                      cachedDataType="i4"
                      cachedName="period"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[period]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips.Inputs[Aggregate Input 1].Columns[state_fips]"
                      cachedDataType="i4"
                      cachedName="state_fips"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[state_fips]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips.Outputs[Aggregate Output 1]"
                  isSorted="true"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips.Outputs[Aggregate Output 1].Columns[period]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips.Outputs[Aggregate Output 1].Columns[period]"
                      name="period"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[period]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips.Outputs[Aggregate Output 1].Columns[state_fips]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips.Outputs[Aggregate Output 1].Columns[state_fips]"
                      name="state_fips"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[state_fips]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="If NotMatched is True then Failed else Success"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Inputs[Conditional Split Input].Columns[NotMatching]"
                      cachedDataType="bool"
                      cachedName="NotMatching"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Outputs[Derived Column Output].Columns[NotMatching]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Outputs[Fail]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Fail"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Outputs[Derived Column Output].Columns[NotMatching]} ==  TRUE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">NotMatching ==  TRUE </property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Outputs[Success]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Success"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Outputs[Derived Column Output].Columns[NotMatching]} ==  FALSE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">NotMatching ==  FALSE </property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Inner Join based on state_fips &amp; year"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">2</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.state_fips]"
                      cachedDataType="i4"
                      cachedName="Data Conversion.state_fips"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.state_fips]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.period]"
                      cachedDataType="i4"
                      cachedName="Data Conversion.period"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.period]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_providers]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_primary_care_providers]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_primary_care_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_primary_care_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_physicians]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_primary_care_physicians]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_primary_care_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_primary_care_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_primary_care_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_primary_care_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_primary_care_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_primary_care_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_primary_care_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_primary_care_physician_assistants]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[state_fips]"
                      cachedDataType="i4"
                      cachedName="state_fips"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[state_fips]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[period]"
                      cachedDataType="i4"
                      cachedName="period"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[period]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_providers]"
                      cachedDataType="i8"
                      cachedName="all_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_primary_care_providers]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_primary_care_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_physicians]"
                      cachedDataType="i8"
                      cachedName="all_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_primary_care_physicians]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_primary_care_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="all_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_primary_care_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_primary_care_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="all_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_primary_care_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_primary_care_physician_assistants]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.state_fips]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.state_fips]"
                      name="Data Conversion.state_fips"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.state_fips]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.period]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.period]"
                      name="Data Conversion.period"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.period]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_providers]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_providers]"
                      name="Data Conversion.all_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_providers]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_providers]"
                      name="Data Conversion.all_primary_care_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_primary_care_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_physicians]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_physicians]"
                      name="Data Conversion.all_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_physicians]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_physicians]"
                      name="Data Conversion.all_primary_care_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_primary_care_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_nurse_practitioners]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_nurse_practitioners]"
                      name="Data Conversion.all_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_nurse_practitioners]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_nurse_practitioners]"
                      name="Data Conversion.all_primary_care_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_primary_care_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_physician_assistants]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_physician_assistants]"
                      name="Data Conversion.all_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_physician_assistants]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_physician_assistants]"
                      name="Data Conversion.all_primary_care_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input].Columns[Data Conversion.all_primary_care_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_providers]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_providers]"
                      name="all_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_providers]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_providers]"
                      name="all_primary_care_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_primary_care_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_physicians]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_physicians]"
                      name="all_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_physicians]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_physicians]"
                      name="all_primary_care_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_primary_care_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_physician_assistants]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_physician_assistants]"
                      name="all_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_nurse_practitioners]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_nurse_practitioners]"
                      name="all_primary_care_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_primary_care_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_nurse_practitioners]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_nurse_practitioners]"
                      name="all_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_physician_assistants]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_physician_assistants]"
                      name="all_primary_care_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[all_primary_care_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[state_fips]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[state_fips]"
                      name="state_fips">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[state_fips]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[period]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[period]"
                      name="period">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input].Columns[period]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Inner join on Period and state_fips"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">2</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Left Input].Columns[period]"
                      cachedDataType="i4"
                      cachedName="period"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips.Outputs[Aggregate Output 1].Columns[period]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Left Input].Columns[state_fips]"
                      cachedDataType="i4"
                      cachedName="state_fips"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips.Outputs[Aggregate Output 1].Columns[state_fips]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[period]"
                      cachedDataType="i4"
                      cachedName="period"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[period]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[state_fips]"
                      cachedDataType="i4"
                      cachedName="state_fips"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[state_fips]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_providers]"
                      cachedDataType="i4"
                      cachedName="all_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_primary_care_providers]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_primary_care_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_physicians]"
                      cachedDataType="i4"
                      cachedName="all_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_primary_care_physicians]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_primary_care_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_nurse_practitioners]"
                      cachedDataType="i4"
                      cachedName="all_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_primary_care_nurse_practitioners]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_primary_care_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_physician_assistants]"
                      cachedDataType="i4"
                      cachedName="all_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_primary_care_physician_assistants]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_primary_care_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[fips]"
                      cachedDataType="i4"
                      cachedName="fips"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[fips]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[period]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[period]"
                      name="period"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Left Input].Columns[period]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[state_fips]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[state_fips]"
                      name="state_fips"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Left Input].Columns[state_fips]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_providers]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_providers]"
                      name="all_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_primary_care_providers]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_primary_care_providers]"
                      name="all_primary_care_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_primary_care_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_physicians]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_physicians]"
                      name="all_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_primary_care_physicians]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_primary_care_physicians]"
                      name="all_primary_care_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_primary_care_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_nurse_practitioners]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_nurse_practitioners]"
                      name="all_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_primary_care_nurse_practitioners]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_primary_care_nurse_practitioners]"
                      name="all_primary_care_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_primary_care_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_physician_assistants]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_physician_assistants]"
                      name="all_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_primary_care_physician_assistants]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_primary_care_physician_assistants]"
                      name="all_primary_care_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[all_primary_care_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[fips]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[fips]"
                      name="fips">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input].Columns[fips]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Log Failed Records">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager 3]"
                  connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager 3]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[Data Conversion.state_fips]"
                      cachedDataType="i4"
                      cachedName="Data Conversion.state_fips"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.state_fips]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.state_fips]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[Data Conversion.period]"
                      cachedDataType="i4"
                      cachedName="Data Conversion.period"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.period]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.period]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[Data Conversion.all_providers]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_providers"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_providers]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[Data Conversion.all_primary_care_providers]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_primary_care_providers"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_primary_care_providers]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[Data Conversion.all_physicians]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_physicians"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_physicians]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[Data Conversion.all_primary_care_physicians]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_primary_care_physicians"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_primary_care_physicians]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[Data Conversion.all_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_nurse_practitioners"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_nurse_practitioners]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[Data Conversion.all_primary_care_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_primary_care_nurse_practitioners"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_primary_care_nurse_practitioners]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[Data Conversion.all_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_physician_assistants"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_physician_assistants]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[Data Conversion.all_primary_care_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="Data Conversion.all_primary_care_physician_assistants"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_primary_care_physician_assistants]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[Data Conversion.all_primary_care_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[all_providers]"
                      cachedDataType="i8"
                      cachedName="all_providers"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_providers]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[all_primary_care_providers]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_providers"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_primary_care_providers]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[all_physicians]"
                      cachedDataType="i8"
                      cachedName="all_physicians"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_physicians]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[all_primary_care_physicians]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_physicians"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_primary_care_physicians]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[all_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="all_physician_assistants"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_physician_assistants]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[all_primary_care_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_nurse_practitioners"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_primary_care_nurse_practitioners]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[all_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="all_nurse_practitioners"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_nurse_practitioners]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[all_primary_care_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_physician_assistants"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_primary_care_physician_assistants]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[all_primary_care_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[state_fips]"
                      cachedDataType="i4"
                      cachedName="state_fips"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[state_fips]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[state_fips]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[period]"
                      cachedDataType="i4"
                      cachedName="period"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[period]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output].Columns[period]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].Columns[NotMatching]"
                      cachedDataType="bool"
                      cachedName="NotMatching"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[NotMatching]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Outputs[Derived Column Output].Columns[NotMatching]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.state_fips]"
                      dataType="i4"
                      name="Data Conversion.state_fips" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.period]"
                      dataType="i4"
                      name="Data Conversion.period" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_providers]"
                      dataType="i8"
                      name="Data Conversion.all_providers" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_primary_care_providers]"
                      dataType="i8"
                      name="Data Conversion.all_primary_care_providers" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_physicians]"
                      dataType="i8"
                      name="Data Conversion.all_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_primary_care_physicians]"
                      dataType="i8"
                      name="Data Conversion.all_primary_care_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_nurse_practitioners]"
                      dataType="i8"
                      name="Data Conversion.all_nurse_practitioners" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_primary_care_nurse_practitioners]"
                      dataType="i8"
                      name="Data Conversion.all_primary_care_nurse_practitioners" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_physician_assistants]"
                      dataType="i8"
                      name="Data Conversion.all_physician_assistants" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[Data Conversion.all_primary_care_physician_assistants]"
                      dataType="i8"
                      name="Data Conversion.all_primary_care_physician_assistants" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_providers]"
                      dataType="i8"
                      name="all_providers" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_primary_care_providers]"
                      dataType="i8"
                      name="all_primary_care_providers" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_physicians]"
                      dataType="i8"
                      name="all_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_primary_care_physicians]"
                      dataType="i8"
                      name="all_primary_care_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_physician_assistants]"
                      dataType="i8"
                      name="all_physician_assistants" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_primary_care_nurse_practitioners]"
                      dataType="i8"
                      name="all_primary_care_nurse_practitioners" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_nurse_practitioners]"
                      dataType="i8"
                      name="all_nurse_practitioners" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[all_primary_care_physician_assistants]"
                      dataType="i8"
                      name="all_primary_care_physician_assistants" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[state_fips]"
                      dataType="i4"
                      name="state_fips" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[period]"
                      dataType="i4"
                      name="period" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input].ExternalColumns[NotMatching]"
                      dataType="bool"
                      name="NotMatching" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Multicast.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Multicast.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Read data from Staging Table"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[SKA_State_County_Data_CSV]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[ADARSH.SKASkating_New]"
                  connectionManagerRefId="Package.ConnectionManagers[ADARSH.SKASkating_New]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[region]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[region]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[region]"
                      name="region"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[region_code]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[region_code]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[region_code]"
                      name="region_code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[period]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[period]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[period]"
                      name="period"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[state_fips]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]"
                      name="state_fips"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[county_fips]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]"
                      name="county_fips"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[fips]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[fips]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[fips]"
                      name="fips"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_providers]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_providers]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_providers]"
                      name="all_providers"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_providers]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_providers]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_providers]"
                      name="all_primary_care_providers"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physicians]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_physicians]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physicians]"
                      name="all_physicians"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physicians]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_physicians]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physicians]"
                      name="all_primary_care_physicians"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_nurse_practitioners]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_nurse_practitioners]"
                      name="all_nurse_practitioners"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_nurse_practitioners]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_nurse_practitioners]"
                      name="all_primary_care_nurse_practitioners"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_physician_assistants]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physician_assistants]"
                      name="all_physician_assistants"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_physician_assistants]"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physician_assistants]"
                      name="all_primary_care_physician_assistants"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[region]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="region" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[region_code]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="region_code" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[period]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="period" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[state_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="state_fips" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[county_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="county_fips" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="fips" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_providers" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_providers" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_nurse_practitioners" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_nurse_practitioners" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_physician_assistants" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].ExternalColumns[all_primary_care_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="all_primary_care_physician_assistants" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[region]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[region]"
                      name="region" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[region_code]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[region_code]"
                      name="region_code" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[period]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[period]"
                      name="period" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[state_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[state_fips]"
                      name="state_fips" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[county_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[county_fips]"
                      name="county_fips" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[fips]"
                      name="fips" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_providers]"
                      name="all_providers" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_providers]"
                      name="all_primary_care_providers" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_physicians]"
                      name="all_physicians" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_physicians]"
                      name="all_primary_care_physicians" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_nurse_practitioners]"
                      name="all_nurse_practitioners" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_nurse_practitioners]"
                      name="all_primary_care_nurse_practitioners" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_physician_assistants]"
                      name="all_physician_assistants" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[all_primary_care_physician_assistants]"
                      name="all_primary_care_physician_assistants" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script to remove the partially identical rows"
              version="10">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public OutputBuffer OutputBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input", StringComparison.Ordinal))
        {
            Input_ProcessInput(new InputBuffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != OutputBuffer)
        {
            OutputBuffer.SetEndOfRowset();
            OutputBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output"))
            {
                OutputBuffer = new OutputBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input_ProcessInput(InputBuffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input_ProcessInputRow(InputBuffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region libraries
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    /// <summary>
    /// This class is created to address all the incoming columns and also to assign data to the outgoing columns
    /// </summary>
    class InputRowData
    {
        public string state_fips;
        public string period;
        public string fips;
        public string all_providers;
        public string all_primary_care_providers;
        public string all_physicians;
        public string all_primary_care_physicians;
        public string all_nurse_practitioners;
        public string all_primary_care_nurse_practitioners;
        public string all_physician_assistants;
        public string all_primary_care_physician_assistants;
        public InputRowData(InputBuffer Row)
        {
            state_fips = Row.statefips;
            period = Row.period;
            fips = Row.fips;
            all_providers = Row.allproviders;
            all_primary_care_providers = Row.allprimarycareproviders;
            all_physicians = Row.allphysicians;
            all_primary_care_physicians = Row.allprimarycarephysicians;
            all_nurse_practitioners = Row.allnursepractitioners;
            all_primary_care_nurse_practitioners = Row.allprimarycarenursepractitioners;
            all_physician_assistants = Row.allphysicianassistants;
            all_primary_care_physician_assistants = Row.allprimarycarephysicianassistants;
        }

        /// <summary>
        /// This method is to verify that the primary key columns period and fips of the new row does not match with that from the last row
        /// </summary>
        /// <param name="checkRow"></param>
        /// <returns></returns>
        public bool KeysDiffer(InputRowData checkRow)
        {
            return (period != checkRow.period
                || fips != checkRow.fips);
        }
        public void WriteToOutputBuffer(OutputBuffer Row)
        {
            Row.AddRow();
            Row.statefips = Convert.ToInt32(state_fips);
            Row.period = Convert.ToInt32(period);
            Row.fips = Convert.ToInt32(fips);
            Row.allproviders = Convert.ToInt32(all_providers);
            Row.allprimarycareproviders = Convert.ToInt32(all_primary_care_providers);
            Row.allphysicians = Convert.ToInt32(all_physicians);
            Row.allprimarycarephysicians = Convert.ToInt32(all_primary_care_physicians);
            Row.allnursepractitioners = Convert.ToInt32(all_nurse_practitioners);
            Row.allprimarycarenursepractitioners = Convert.ToInt32(all_primary_care_nurse_practitioners);
            Row.allphysicianassistants = Convert.ToInt32(all_physician_assistants);
            Row.allprimarycarephysicianassistants = Convert.ToInt32(all_primary_care_physician_assistants);
        }
    }

    private InputRowData lastrow;
    public override void Input_ProcessInputRow(InputBuffer Row)
    {
        if (lastrow == null) //This is to verify if we are processing the first row in the input buffer
        {
            lastrow = new InputRowData(Row);
        }
        InputRowData newRow = new InputRowData(Row);
        if (newRow.KeysDiffer(lastrow)) //if the keys are found to be same then the new row is not added to the output buffer
        {
            lastrow.WriteToOutputBuffer(this.OutputBuffer);
        }
        lastrow = newRow;
    }

    public override void FinishOutputs()
    {
        if (lastrow != null)
        {
            lastrow.WriteToOutputBuffer(this.OutputBuffer);
        }
        base.FinishOutputs();
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class InputBuffer: ScriptBuffer

{
    public InputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String period
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool period_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String fips
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool fips_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String allproviders
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool allproviders_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String allprimarycareproviders
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool allprimarycareproviders_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String allphysicians
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool allphysicians_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String allprimarycarephysicians
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool allprimarycarephysicians_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String allnursepractitioners
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool allnursepractitioners_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String allprimarycarenursepractitioners
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool allprimarycarenursepractitioners_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String allphysicianassistants
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool allphysicianassistants_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String allprimarycarephysicianassistants
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool allprimarycarephysicianassistants_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String statefips
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool statefips_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class OutputBuffer: ScriptBuffer

{
    public OutputBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 period
    {
        set
        {
            this[0] = value;
        }
    }
    public bool period_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 fips
    {
        set
        {
            this[1] = value;
        }
    }
    public bool fips_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 allproviders
    {
        set
        {
            this[2] = value;
        }
    }
    public bool allproviders_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 allprimarycareproviders
    {
        set
        {
            this[3] = value;
        }
    }
    public bool allprimarycareproviders_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 allphysicians
    {
        set
        {
            this[4] = value;
        }
    }
    public bool allphysicians_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 allprimarycarephysicians
    {
        set
        {
            this[5] = value;
        }
    }
    public bool allprimarycarephysicians_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 allnursepractitioners
    {
        set
        {
            this[6] = value;
        }
    }
    public bool allnursepractitioners_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 allprimarycarenursepractitioners
    {
        set
        {
            this[7] = value;
        }
    }
    public bool allprimarycarenursepractitioners_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 allphysicianassistants
    {
        set
        {
            this[8] = value;
        }
    }
    public bool allphysicianassistants_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 allprimarycarephysicianassistants
    {
        set
        {
            this[9] = value;
        }
    }
    public bool allprimarycarephysicianassistants_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 statefips
    {
        set
        {
            this[10] = value;
        }
    }
    public bool statefips_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c0380dd5d94e44c3ac7e6cf2b15596bb.Properties.Settings.get_Default():SC_c0380dd5d94e44c3ac7e6cf2b15596bb.Properties.Sett" +
    "ings")]

namespace SC_c0380dd5d94e44c3ac7e6cf2b15596bb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_c0380dd5d94e44c3ac7e6cf2b15596bb</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_c0380dd5d94e44c3ac7e6cf2b15596bb</msb:DisplayName>
		<msb:ProjectId>{DE389099-2DC7-4EC4-AA40-481EE2208085}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_c0380dd5d94e44c3ac7e6cf2b15596bb.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_c0380dd5d94e44c3ac7e6cf2b15596bb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_c0380dd5d94e44c3ac7e6cf2b15596bb")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_c0380dd5d94e44c3ac7e6cf2b15596bb.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8CBEAC84-1F03-459D-A1A6-079B93FAA195}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_c0380dd5d94e44c3ac7e6cf2b15596bb</RootNamespace>
    <AssemblyName>SC_c0380dd5d94e44c3ac7e6cf2b15596bb</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c0380dd5d94e44c3ac7e6cf2b15596bb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c0380dd5d94e44c3ac7e6cf2b15596bb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c0380dd5d94e44c3ac7e6cf2b15596bb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_c0380dd5d94e44c3ac7e6cf2b15596bb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_c0380dd5d94e44c3ac7e6cf2b15596bb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_c0380dd5d94e44c3ac7e6cf2b15596bb.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKirrVsAAAAAAAAAAOAAIiALATAAACQAAAAIAAAAAAAADkMA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALxCAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFCMAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
QgAAAAAAAEgAAAACAAUA7CYAABgbAAABAAAAAAAAAARCAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgBCAAAAAQAAEQJ7AQAABC0MAgNzSAAABn0BAAAEA3NI
AAAGCgYCewEAAARvSQAABiwRAnsBAAAEAnsEAAAEb0oAAAYCBn0BAAAEKoICewEAAAQsEQJ7AQAA
BAJ7BAAABG9KAAAGAig5AAAGKh4CKDcAAAYqKgIDBAUoEAAACipSAnsRAAAKAnsSAAAKFpRvEwAA
CioiAhYoFAAACipSAnsRAAAKAnsSAAAKF5RvEwAACioiAhcoFAAACipSAnsRAAAKAnsSAAAKGJRv
EwAACioiAhgoFAAACipSAnsRAAAKAnsSAAAKGZRvEwAACioiAhkoFAAACipSAnsRAAAKAnsSAAAK
GpRvEwAACioiAhooFAAACipSAnsRAAAKAnsSAAAKG5RvEwAACioiAhsoFAAACipSAnsRAAAKAnsS
AAAKHJRvEwAACioiAhwoFAAACipSAnsRAAAKAnsSAAAKHZRvEwAACioiAh0oFAAACipSAnsRAAAK
AnsSAAAKHpRvEwAACioiAh4oFAAACipWAnsRAAAKAnsSAAAKHwmUbxMAAAoqJgIfCSgUAAAKKlYC
exEAAAoCexIAAAofCpRvEwAACiomAh8KKBQAAAoqHgIoFQAACioeAigWAAAKKjoCFgOMGgAAASgX
AAAKKloDLAgCFigYAAAKKnIBAABwcxkAAAp6OgIXA4waAAABKBcAAAoqWgMsCAIXKBgAAAoqcgEA
AHBzGQAACno6AhgDjBoAAAEoFwAACipaAywIAhgoGAAACipyAQAAcHMZAAAKejoCGQOMGgAAASgX
AAAKKloDLAgCGSgYAAAKKnIBAABwcxkAAAp6OgIaA4waAAABKBcAAAoqWgMsCAIaKBgAAAoqcgEA
AHBzGQAACno6AhsDjBoAAAEoFwAACipaAywIAhsoGAAACipyAQAAcHMZAAAKejoCHAOMGgAAASgX
AAAKKloDLAgCHCgYAAAKKnIBAABwcxkAAAp6OgIdA4waAAABKBcAAAoqWgMsCAIdKBgAAAoqcgEA
AHBzGQAACno6Ah4DjBoAAAEoFwAACipaAywIAh4oGAAACipyAQAAcHMZAAAKej4CHwkDjBoAAAEo
FwAACipeAywJAh8JKBgAAAoqcgEAAHBzGQAACno+Ah8KA4waAAABKBcAAAoqXgMsCQIfCigYAAAK
KnIBAABwcxkAAAp6HgIoGgAACioeAigbAAAKKn4CKBwAAAoCAnM/AAAGfQIAAAQCAnNAAAAGfQMA
AAQqAAATMAQATwAAAAAAAAAEcp4AAHAabx0AAAosFQIFAgMoHgAACg4EcwQAAAZvPQAABgVvHwAA
CiwjAgJ7BQAABBdYfQUAAAQCewUAAAQXMwwCbzkAAAYCKDoAAAYqBipuAnsEAAAELBICewQAAARv
NQAABgIUfQQAAAQqAAAAEzAFAD0AAAACAAARFgorLgQGlA4EcqoAAHAoIAAACjMZAgUGmgIEBpQo
HgAACg4Ecx0AAAZ9BAAABAYXWAoGAzLOAm88AAAGKkorBwIDbz4AAAYDbxsAAAYt8So6AighAAAK
AgN9BgAABCo6AighAAAKAgN9BwAABCoeAighAAAKKq5+CAAABC0ecrgAAHDQCAAAAigiAAAKbyMA
AApzJAAACoAIAAAEfggAAAQqGn4JAAAEKh4CgAkAAAQqGn4KAAAEKh4CKCUAAAoqLnNGAAAGgAoA
AAQqEzACAIsAAAAAAAAAAighAAAKAgNvGQAABn0LAAAEAgNvBQAABn0MAAAEAgNvBwAABn0NAAAE
AgNvCQAABn0OAAAEAgNvCwAABn0PAAAEAgNvDQAABn0QAAAEAgNvDwAABn0RAAAEAgNvEQAABn0S
AAAEAgNvEwAABn0TAAAEAgNvFQAABn0UAAAEAgNvFwAABn0VAAAEKp4CewwAAAQDewwAAAQoJgAA
Ci0SAnsNAAAEA3sNAAAEKCYAAAoqFyoAEzACAMIAAAAAAAAAA280AAAGAwJ7CwAABCgnAAAKbzIA
AAYDAnsMAAAEKCcAAApvHgAABgMCew0AAAQoJwAACm8gAAAGAwJ7DgAABCgnAAAKbyIAAAYDAnsP
AAAEKCcAAApvJAAABgMCexAAAAQoJwAACm8mAAAGAwJ7EQAABCgnAAAKbygAAAYDAnsSAAAEKCcA
AApvKgAABgMCexMAAAQoJwAACm8sAAAGAwJ7FAAABCgnAAAKby4AAAYDAnsVAAAEKCcAAApvMAAA
BioAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAFwLAAAjfgAAyAsAACwMAAAj
U3RyaW5ncwAAAAD0FwAALAEAACNVUwAgGQAAEAAAACNHVUlEAAAAMBkAAOgBAAAjQmxvYgAAAAAA
AAACAAABVxWiAQkDAAAA+gEzABYAAAEAAAAhAAAACgAAABUAAABKAAAALQAAACcAAAAQAAAAAgAA
AAQAAAAvAAAAMAAAAAEAAAAEAAAAAQAAAAEAAAAAADADAQAAAAAABgA+Ai0HBgDSAi0HBgCKARoH
DwChBwAABgC3AUcGBgAhAkcGBgACAkcGBgC5AkcGBgBeAkcGBgB3AkcGBgDOAUcGBgDpAfYCCgCS
AtcABgAVC/8FCgDCBtcADgCzBtcACgCQBtcACgBlC9cABgBtARoHBgDzBk0HBgCEBjIGEgA9ARoD
EgCeARoDEgAlAR0GBgBSAS0HBgADAP8FBgBZBv8FBgATA/8FBgBzBv8FBgD4AP8FBgCpAP8FBgAU
DEcGBgCSC/8FAAAAAAkAAAAAAAEAAQABABAAEgYAABQAAQABAAEAEADPBgAAPQACAAQAAQAQAOIG
AAA9AAIAHQABABAARwsAAEkAAgA3AAEAEACnCAAAOQAGAD8AAQAQAN8HAAA5AAcAQAAAABAAVAew
BzkACABBAAABEAAOCLAHYQAKAEUAAwAQACYAAAA5AAsASAABAAgMkAAGAKcIlAAGAN8HmAAGAOIG
nAABAGAAoAABAFULowABAFULowARAAYGpwARABUBqwARAJkArwAGALMIswAGAJIAswAGAOcIswAG
AAcJswAGAOwIswAGADoIswAGAB4IswAGAJwJswAGAHcJswAGAFgKswAGADIKswBQIAAAAADGAOoL
tgABAJ4gAAAAAMYA8woGAAIAvyAAAAAAhhgDBwYAAgDHIAAAAACGGAMHIAACANIgAAAAAIYIgwC8
AAUA5yAAAAAAhghYAzwABQDwIAAAAACGCL4IvAAFAAUhAAAAAIYI9gM8AAUADiEAAAAAhghNCbwA
BQAjIQAAAACGCIYEPAAFACwhAAAAAIYIFQm8AAUAQSEAAAAAhghABDwABQBKIQAAAACGCIMIvAAF
AF8hAAAAAIYIxAM8AAUAaCEAAAAAhghJCLwABQB9IQAAAACGCHwDPAAFAIYhAAAAAIYI/gm8AAUA
myEAAAAAhggOBTwABQCkIQAAAACGCLQJvAAFALkhAAAAAIYItgQ8AAUAwiEAAAAAhgi9CrwABQDX
IQAAAACGCKoFPAAFAOAhAAAAAIYIcQq8AAUA9iEAAAAAhghQBTwABQAAIgAAAACGCNAIvAAFABYi
AAAAAIYIFgQ8AAUAICIAAAAAhgAADDwABQAoIgAAAACGAC8LPAAFAMcgAAAAAIYYAwcgAAUAMCIA
AAAAhgiOAAEACAA/IgAAAACGCGoDwAAJAFYiAAAAAIYIxwgBAAoAZSIAAAAAhggGBMAACwB8IgAA
AACGCF4JAQAMAIsiAAAAAIYIngTAAA0AoiIAAAAAhggxCQEADgCxIgAAAACGCGMEwAAPAMgiAAAA
AIYIlQgBABAA1yIAAAAAhgjdA8AAEQDuIgAAAACGCGYIAQASAP0iAAAAAIYIoAPAABMAFCMAAAAA
hggYCgEAFAAjIwAAAACGCC8FwAAVADojAAAAAIYI2QkBABYASSMAAAAAhgjiBMAAFwBgIwAAAACG
CNgKAQAYAG8jAAAAAIYIzAXAABkAhiMAAAAAhgiXCgEAGgCWIwAAAACGCH0FwAAbAK4jAAAAAIYI
3ggBABwAviMAAAAAhggrBMAAHQDWIwAAAACGANoLBgAeAN4jAAAAAIYALAsGAB4AKCIAAAAAhgAv
CzwAHgDmIwAAAACGGAMHBgAeAAgkAAAAAMYAwQvFAB4AYyQAAAAAxgHzCgYAIgBlJAAAAACBAG8A
BgAiAIQkAAAAAMYAzgvPACIAYyQAAAAAxgEBCwYAJgDNJAAAAADGAbsLtgAmAGMkAAAAAMYB6gu2
ACcA4CQAAAAAhhgDB9sAKADvJAAAAACGGAMH2wApAP4kAAAAAIMYAwcGACoABiUAAAAAkwjvBuEA
KgAyJQAAAACTCP0A5gAqADklAAAAAJMICQHrACoAQSUAAAAAlgg7C/EAKwBIJQAAAACGGAMHBgAr
AFAlAAAAAJEYCQf2ACsAXCUAAAAAhhgDB7YAKwDzJQAAAACGAKgG+gAsABwmAAAAAIYA2wYAAS0A
AAABAAQMAAABAOgGAAACAOkHAAADAJ4GAAABAOgGAAACAOkHAAADAJ4GAAABAPACAAABAPACAAAB
APACAAABAPACAAABAPACAAABAPACAAABAPACAAABAPACAAABAPACAAABAPACAAABAPACAAABAPAC
AAABAPACAAABAPACAAABAPACAAABAPACAAABAPACAAABAPACAAABAPACAAABAPACAAABAPACAAAB
APACAAABABIAAAACAM0AAAADAOgGAAAEAJ4GAAABAPkKAAACABAHAAADAG8JAAAEAJ4GAAABAOgG
AAABAAQMAAABAGsLAAABAGsLAAABAPACAAABAAQMAAABAOELAAABAAQMCQADBwEAEQADBwYAGQAD
BwoAKQADBxAAMQADBxAAOQADBxAAQQADBxAASQADBxAAUQADBxAAWQADBxAAYQADBxAAaQADBwYA
mQADBwYAuQADBxUAyQADBwYAeQADByAAeQDoBioAeQDpBy4AgQAQAzIAeQDnBTcAeQAADDwAeQAv
CzwAeQD2BUAAeQDuBQEA2QADBxAAeQDaCwYAeQAsCwYAkQADBwYA4QAXCEYAkQD9B00AgQAcCzwA
kQAaAFcAcQADBwYA8QC7AF4A8QAQDGUAoQADB2sAwQADBwYA4QAdDHMACQEBAHkALgALACEBLgAT
ACoBLgAbAEkBLgAjAFIBLgArAHsBLgAzAHsBLgA7AHsBLgBDAFIBLgBLAIEBLgBTAHsBLgBbAJgB
QwBjAOIBAwFrAOIBQQF7AOIBqQVzAEkByQVzAEkBGwBTAAMAAQAEABcACAAtAAkALwAAAJIABgEA
AG4DCgEAAOcIBgEAADQECgEAAGIJBgEAAKIECgEAADUJBgEAAGcECgEAAJkIBgEAAOEDCgEAAGoI
BgEAAKQDCgEAABwKBgEAADMFCgEAAN0JBgEAAOYECgEAANwKBgEAANAFCgEAAJsKBgEAAIEFCgEA
AOIIBgEAAC8ECgEAAJIADgEAAG4DCgEAAOcIDgEAADQECgEAAGIJDgEAAKIECgEAADUJDgEAAGcE
CgEAAJkIDgEAAOEDCgEAAGoIDgEAAKQDCgEAABwKDgEAADMFCgEAAN0JDgEAAOYECgEAANwKDgEA
ANAFCgEAAJsKDgEAAIEFCgEAAOIIDgEAAC8ECgEAAPMGEgEAAB0BFwEAAD8LHAECAAUAAwACAAYA
BQACAAcABwACAAgACQACAAkACwACAAoADQACAAsADwACAAwAEQACAA0AEwACAA4AFQACAA8AFwAC
ABAAGQACABEAGwACABIAHQACABMAHwACABQAIQACABUAIwACABYAJQACABcAJwACABgAKQACABkA
KwACABoALQABAB4ALwABAB8AMQABACAAMwABACEANQABACIANwABACMAOQABACQAOwABACUAPQAB
ACYAPwABACcAQQABACgAQwABACkARQABACoARwABACsASQABACwASwABAC0ATQABAC4ATwABAC8A
UQABADAAUwABADEAVQABADIAVwABADMAWQACAEIAWwACAEMAXQABAEQAXQACAEUAXwAEgAAAAQAA
AAAAAAAAAAAAAAAzAAAABAAAAAAAAAAAAAAAfgBXAAAAAAANAAAAAAAAAAAAAACHAHULAAAAAA0A
AAAAAAAAAAAAAIcAmgsAAAAABAAAAAAAAAAAAAAAfgD/BQAAAAAAAAAAAQAAAF4HAAAKAAIAAAAA
VG9JbnQzMgA8TW9kdWxlPgBJbnB1dElEAEdldE91dHB1dElEAElucHV0Um93RGF0YQBTQ19jMDM4
MGRkNWQ5NGU0NGMzYWM3ZTZjZjJiMTU1OTZiYgBtc2NvcmxpYgBJbnB1dHNGaW5pc2hlZABNYXJr
T3V0cHV0c0ZpbmlzaGVkAGdldF9wZXJpb2QAc2V0X3BlcmlvZABkZWZhdWx0SW5zdGFuY2UAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAFN5c3Rl
bS5Db21wb25lbnRNb2RlbABTQ19jMDM4MGRkNWQ5NGU0NGMzYWM3ZTZjZjJiMTU1OTZiYi5kbGwA
Z2V0X3BlcmlvZF9Jc051bGwAc2V0X3BlcmlvZF9Jc051bGwAZ2V0X2FsbHByaW1hcnljYXJlcGh5
c2ljaWFuc19Jc051bGwAc2V0X2FsbHByaW1hcnljYXJlcGh5c2ljaWFuc19Jc051bGwAZ2V0X2Fs
bHBoeXNpY2lhbnNfSXNOdWxsAHNldF9hbGxwaHlzaWNpYW5zX0lzTnVsbABnZXRfZmlwc19Jc051
bGwAc2V0X2ZpcHNfSXNOdWxsAGdldF9zdGF0ZWZpcHNfSXNOdWxsAHNldF9zdGF0ZWZpcHNfSXNO
dWxsAGdldF9hbGxwcmltYXJ5Y2FyZXByb3ZpZGVyc19Jc051bGwAc2V0X2FsbHByaW1hcnljYXJl
cHJvdmlkZXJzX0lzTnVsbABnZXRfYWxscHJvdmlkZXJzX0lzTnVsbABzZXRfYWxscHJvdmlkZXJz
X0lzTnVsbABnZXRfYWxscHJpbWFyeWNhcmVudXJzZXByYWN0aXRpb25lcnNfSXNOdWxsAHNldF9h
bGxwcmltYXJ5Y2FyZW51cnNlcHJhY3RpdGlvbmVyc19Jc051bGwAZ2V0X2FsbG51cnNlcHJhY3Rp
dGlvbmVyc19Jc051bGwAc2V0X2FsbG51cnNlcHJhY3RpdGlvbmVyc19Jc051bGwAZ2V0X2FsbHBy
aW1hcnljYXJlcGh5c2ljaWFuYXNzaXN0YW50c19Jc051bGwAc2V0X2FsbHByaW1hcnljYXJlcGh5
c2ljaWFuYXNzaXN0YW50c19Jc051bGwAZ2V0X2FsbHBoeXNpY2lhbmFzc2lzdGFudHNfSXNOdWxs
AHNldF9hbGxwaHlzaWNpYW5hc3Npc3RhbnRzX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3Rl
bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3Ry
aW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABLZXlzRGlm
ZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBJbnB1dEJ1ZmZlcgBXcml0ZVRvT3V0cHV0
QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0u
RGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3Vy
Y2VzAFNDX2MwMzgwZGQ1ZDk0ZTQ0YzNhYzdlNmNmMmIxNTU5NmJiLlByb3BlcnRpZXMuUmVzb3Vy
Y2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19jMDM4MGRkNWQ5NGU0NGMzYWM3ZTZjZjJi
MTU1OTZiYi5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVt
bkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAGFsbF9wcmltYXJ5X2NhcmVfcGh5c2ljaWFucwBhbGxf
cGh5c2ljaWFucwBnZXRfYWxscHJpbWFyeWNhcmVwaHlzaWNpYW5zAHNldF9hbGxwcmltYXJ5Y2Fy
ZXBoeXNpY2lhbnMAZ2V0X2FsbHBoeXNpY2lhbnMAc2V0X2FsbHBoeXNpY2lhbnMAQ29ubmVjdGlv
bnMAc3RhdGVfZmlwcwBnZXRfZmlwcwBzZXRfZmlwcwBnZXRfc3RhdGVmaXBzAHNldF9zdGF0ZWZp
cHMAYWxsX3ByaW1hcnlfY2FyZV9wcm92aWRlcnMAYWxsX3Byb3ZpZGVycwBnZXRfYWxscHJpbWFy
eWNhcmVwcm92aWRlcnMAc2V0X2FsbHByaW1hcnljYXJlcHJvdmlkZXJzAGdldF9hbGxwcm92aWRl
cnMAc2V0X2FsbHByb3ZpZGVycwBCdWZmZXJzAGFsbF9wcmltYXJ5X2NhcmVfbnVyc2VfcHJhY3Rp
dGlvbmVycwBhbGxfbnVyc2VfcHJhY3RpdGlvbmVycwBnZXRfYWxscHJpbWFyeWNhcmVudXJzZXBy
YWN0aXRpb25lcnMAc2V0X2FsbHByaW1hcnljYXJlbnVyc2VwcmFjdGl0aW9uZXJzAGdldF9hbGxu
dXJzZXByYWN0aXRpb25lcnMAc2V0X2FsbG51cnNlcHJhY3RpdGlvbmVycwBhbGxfcHJpbWFyeV9j
YXJlX3BoeXNpY2lhbl9hc3Npc3RhbnRzAGFsbF9waHlzaWNpYW5fYXNzaXN0YW50cwBnZXRfYWxs
cHJpbWFyeWNhcmVwaHlzaWNpYW5hc3Npc3RhbnRzAHNldF9hbGxwcmltYXJ5Y2FyZXBoeXNpY2lh
bmFzc2lzdGFudHMAZ2V0X2FsbHBoeXNpY2lhbmFzc2lzdGFudHMAc2V0X2FsbHBoeXNpY2lhbmFz
c2lzdGFudHMARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAE9iamVjdABnZXRfRW5k
T2ZSb3dzZXQAU2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRD
b21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAQ29u
dmVydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dF9Qcm9jZXNzSW5wdXQA
UHJpbWVPdXRwdXQAQWRkUm93AGNoZWNrUm93AElucHV0X1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93
AGxhc3Ryb3cAZ2V0X0Fzc2VtYmx5AG9wX0luZXF1YWxpdHkAAACAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAC0kAbgBwAHUAdAAADU8AdQB0AHAAdQB0AABxUwBDAF8A
YwAwADMAOAAwAGQAZAA1AGQAOQA0AGUANAA0AGMAMwBhAGMANwBlADYAYwBmADIAYgAxADUANQA5
ADYAYgBiAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAHoKawGa
47dErI+Z/OFGodIABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkEBwESKAkgAwESQR0IEkUDBhJB
AwYdCAQgAQ4IBCABAggDIAACBSACAQgcBiACAg4RdQUgAR0ICAMHAQgGAAIIEkUOBgABEnkRfQUg
ABKAgQcgAgEOEoCBBQACAg4OBAABCA4It3pcVhk04IkIiYRdzYCAzJEDBhIoAwYSGAMGEhwDBhIQ
AgYIAwYSSQMGElEDBhJVAwYSJAIGDgUgAQESDAMgAA4EIAEBAgkgBAEIDhJBEkULIAQBCB0IHRJB
EkUFIAEBEkkEAAASUQQAABJVBQABARJVBAAAEiQDAAABBSABAhIoBSABARIQAygADgMoAAIDKAAI
BAgAElEECAASVQQIABIkCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgB
AAIAAAAAACgBACNTQ19jMDM4MGRkNWQ5NGU0NGMzYWM3ZTZjZjJiMTU1OTZiYgAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDE4AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAALQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADk
QgAAAAAAAAAAAAD+QgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8EIAAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
YwAwADMAOAAwAGQAZAA1AGQAOQA0AGUANAA0AGMAMwBhAGMANwBlADYAYwBmADIAYgAxADUANQA5
ADYAYgBiAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBjADAAMwA4ADAAZABkADUAZAA5
ADQAZQA0ADQAYwAzAGEAYwA3AGUANgBjAGYAMgBiADEANQA1ADkANgBiAGIALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADEAOAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGMAMAAzADgAMABk
AGQANQBkADkANABlADQANABjADMAYQBjADcAZQA2AGMAZgAyAGIAMQA1ADUAOQA2AGIAYgAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBjADAAMwA4ADAAZABk
ADUAZAA5ADQAZQA0ADQAYwAzAGEAYwA3AGUANgBjAGYAMgBiADEANQA1ADkANgBiAGIAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAABAzAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_c0380dd5d94e44c3ac7e6cf2b15596bb</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">e1f79f1f120505abd681e7efc45ef974</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">a80a96ed1e9e12e53d102e96f03b2d777ece0fb9</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Inputs[Input]"
                  hasSideEffects="true"
                  name="Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Inputs[Input].Columns[period]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="period"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[period]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Inputs[Input].Columns[fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="fips"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[fips]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Inputs[Input].Columns[all_providers]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_providers"
                      cachedSortKeyPosition="3"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Inputs[Input].Columns[all_primary_care_providers]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_providers"
                      cachedSortKeyPosition="4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_primary_care_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Inputs[Input].Columns[all_physicians]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_physicians"
                      cachedSortKeyPosition="5"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Inputs[Input].Columns[all_primary_care_physicians]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_physicians"
                      cachedSortKeyPosition="6"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_primary_care_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Inputs[Input].Columns[all_nurse_practitioners]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_nurse_practitioners"
                      cachedSortKeyPosition="7"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Inputs[Input].Columns[all_primary_care_nurse_practitioners]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_nurse_practitioners"
                      cachedSortKeyPosition="8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_primary_care_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Inputs[Input].Columns[all_physician_assistants]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_physician_assistants"
                      cachedSortKeyPosition="9"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Inputs[Input].Columns[all_primary_care_physician_assistants]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_physician_assistants"
                      cachedSortKeyPosition="10"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_primary_care_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Inputs[Input].Columns[state_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="state_fips"
                      cachedSortKeyPosition="11"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[state_fips]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output]"
                  hasSideEffects="true"
                  isSorted="true"
                  name="Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[period]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[period]"
                      name="period"
                      sortKeyPosition="2" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[fips]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[fips]"
                      name="fips"
                      sortKeyPosition="1" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_providers]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_providers]"
                      name="all_providers" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_providers]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_providers]"
                      name="all_primary_care_providers" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_physicians]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_physicians]"
                      name="all_physicians" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_physicians]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_physicians]"
                      name="all_primary_care_physicians" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_nurse_practitioners]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_nurse_practitioners]"
                      name="all_nurse_practitioners" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_nurse_practitioners]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_nurse_practitioners]"
                      name="all_primary_care_nurse_practitioners" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_physician_assistants]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_physician_assistants]"
                      name="all_physician_assistants" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_physician_assistants]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_physician_assistants]"
                      name="all_primary_care_physician_assistants" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[state_fips]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[state_fips]"
                      name="state_fips" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Send Data to SKA_State_County_Data"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[SKA_State_County_Data]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[ADARSH.SKASkating_New]"
                  connectionManagerRefId="Package.ConnectionManagers[ADARSH.SKASkating_New]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].Columns[all_providers]"
                      cachedDataType="i4"
                      cachedName="all_providers"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_providers]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].Columns[all_primary_care_providers]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_providers"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_providers]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_primary_care_providers]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].Columns[all_physicians]"
                      cachedDataType="i4"
                      cachedName="all_physicians"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_physicians]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].Columns[all_primary_care_physicians]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_physicians"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_physicians]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_primary_care_physicians]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].Columns[all_physician_assistants]"
                      cachedDataType="i4"
                      cachedName="all_physician_assistants"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_physician_assistants]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].Columns[all_primary_care_physician_assistants]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_physician_assistants"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_physician_assistants]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_primary_care_physician_assistants]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].Columns[fips]"
                      cachedDataType="i4"
                      cachedName="fips"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[fips_fk]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[fips]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].Columns[period]"
                      cachedDataType="i4"
                      cachedName="period"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[period]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].Columns[all_nurse_practitioners]"
                      cachedDataType="i4"
                      cachedName="all_nurse_practitioners"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_nurse_practicioners]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].Columns[all_primary_care_nurse_practitioners]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_nurse_practitioners"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_nurse_practicioners]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output].Columns[all_primary_care_nurse_practitioners]" />
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].Columns[InsertDateTime]"
                      cachedDataType="date"
                      cachedName="InsertDateTime"
                      externalMetadataColumnId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[InsertDateTime]"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Outputs[Derived Column Output].Columns[InsertDateTime]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[fips_fk]"
                      dataType="i4"
                      name="fips_fk" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      dataType="i4"
                      name="year" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_providers]"
                      dataType="i4"
                      name="all_providers" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_providers]"
                      dataType="i4"
                      name="all_primary_care_providers" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_physicians]"
                      dataType="i4"
                      name="all_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_physicians]"
                      dataType="i4"
                      name="all_primary_care_physicians" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_nurse_practicioners]"
                      dataType="i4"
                      name="all_nurse_practicioners" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_nurse_practicioners]"
                      dataType="i4"
                      name="all_primary_care_nurse_practicioners" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_physician_assistants]"
                      dataType="i4"
                      name="all_physician_assistants" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[all_primary_care_physician_assistants]"
                      dataType="i4"
                      name="all_primary_care_physician_assistants" />
                    <externalMetadataColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input].ExternalColumns[InsertDateTime]"
                      dataType="dbTimeStamp"
                      name="InsertDateTime" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Inputs[Sort Input].Columns[state_fips]"
                      cachedDataType="i4"
                      cachedName="state_fips"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[state_fips]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Inputs[Sort Input].Columns[period]"
                      cachedDataType="i4"
                      cachedName="period"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[period]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Inputs[Sort Input].Columns[all_providers]"
                      cachedDataType="i8"
                      cachedName="all_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_providers]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Inputs[Sort Input].Columns[all_primary_care_providers]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_providers]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Inputs[Sort Input].Columns[all_physicians]"
                      cachedDataType="i8"
                      cachedName="all_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_physicians]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Inputs[Sort Input].Columns[all_primary_care_physicians]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_physicians]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Inputs[Sort Input].Columns[all_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="all_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_nurse_practitioners]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Inputs[Sort Input].Columns[all_primary_care_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_nurse_practitioners]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Inputs[Sort Input].Columns[all_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="all_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_physician_assistants]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Inputs[Sort Input].Columns[all_primary_care_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_physician_assistants]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.state_fips]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.state_fips]"
                      name="Data Conversion.state_fips"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[state_fips]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.period]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.period]"
                      name="Data Conversion.period"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[period]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_providers]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_providers]"
                      name="Data Conversion.all_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_primary_care_providers]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_primary_care_providers]"
                      name="Data Conversion.all_primary_care_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_physicians]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_physicians]"
                      name="Data Conversion.all_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_primary_care_physicians]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_primary_care_physicians]"
                      name="Data Conversion.all_primary_care_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_nurse_practitioners]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_nurse_practitioners]"
                      name="Data Conversion.all_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_primary_care_nurse_practitioners]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_primary_care_nurse_practitioners]"
                      name="Data Conversion.all_primary_care_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_physician_assistants]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_physician_assistants]"
                      name="Data Conversion.all_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_primary_care_physician_assistants]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output].Columns[Data Conversion.all_primary_care_physician_assistants]"
                      name="Data Conversion.all_primary_care_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output].Columns[all_primary_care_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort 1"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Inputs[Sort Input].Columns[all_providers]"
                      cachedDataType="i8"
                      cachedName="all_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_providers]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Inputs[Sort Input].Columns[all_primary_care_providers]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_providers]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Inputs[Sort Input].Columns[all_physicians]"
                      cachedDataType="i8"
                      cachedName="all_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_physicians]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Inputs[Sort Input].Columns[all_primary_care_physicians]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_physicians]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Inputs[Sort Input].Columns[all_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="all_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_physician_assistants]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Inputs[Sort Input].Columns[all_primary_care_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_nurse_practitioners]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Inputs[Sort Input].Columns[all_nurse_practitioners]"
                      cachedDataType="i8"
                      cachedName="all_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_nurse_practitioners]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Inputs[Sort Input].Columns[all_primary_care_physician_assistants]"
                      cachedDataType="i8"
                      cachedName="all_primary_care_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_physician_assistants]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Inputs[Sort Input].Columns[state_fips]"
                      cachedDataType="i4"
                      cachedName="state_fips"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[state_fips]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Inputs[Sort Input].Columns[period]"
                      cachedDataType="i4"
                      cachedName="period"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[period]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_providers]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_providers]"
                      name="all_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_primary_care_providers]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_primary_care_providers]"
                      name="all_primary_care_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_physicians]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_physicians]"
                      name="all_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_primary_care_physicians]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_primary_care_physicians]"
                      name="all_primary_care_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_physician_assistants]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_physician_assistants]"
                      name="all_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_primary_care_nurse_practitioners]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_primary_care_nurse_practitioners]"
                      name="all_primary_care_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_nurse_practitioners]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_nurse_practitioners]"
                      name="all_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_primary_care_physician_assistants]"
                      dataType="i8"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[all_primary_care_physician_assistants]"
                      name="all_primary_care_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[all_primary_care_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[state_fips]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[state_fips]"
                      name="state_fips"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[state_fips]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[period]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output].Columns[period]"
                      name="period"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1].Columns[period]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort 2"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Inputs[Sort Input].Columns[period]"
                      cachedDataType="i4"
                      cachedName="period"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[period]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Inputs[Sort Input].Columns[fips]"
                      cachedDataType="i4"
                      cachedName="fips"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[fips]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Inputs[Sort Input].Columns[all_providers]"
                      cachedDataType="i4"
                      cachedName="all_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_providers]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Inputs[Sort Input].Columns[all_primary_care_providers]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_providers]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Inputs[Sort Input].Columns[all_physicians]"
                      cachedDataType="i4"
                      cachedName="all_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_physicians]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Inputs[Sort Input].Columns[all_primary_care_physicians]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_physicians]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Inputs[Sort Input].Columns[all_nurse_practitioners]"
                      cachedDataType="i4"
                      cachedName="all_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_nurse_practitioners]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Inputs[Sort Input].Columns[all_primary_care_nurse_practitioners]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_nurse_practitioners]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Inputs[Sort Input].Columns[all_physician_assistants]"
                      cachedDataType="i4"
                      cachedName="all_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_physician_assistants]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Inputs[Sort Input].Columns[all_primary_care_physician_assistants]"
                      cachedDataType="i4"
                      cachedName="all_primary_care_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_physician_assistants]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Inputs[Sort Input].Columns[state_fips]"
                      cachedDataType="i4"
                      cachedName="state_fips"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[state_fips]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[period]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[period]"
                      name="period"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[period]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[fips]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[fips]"
                      name="fips">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[fips]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_providers]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_providers]"
                      name="all_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_primary_care_providers]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_primary_care_providers]"
                      name="all_primary_care_providers">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_physicians]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_physicians]"
                      name="all_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_primary_care_physicians]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_primary_care_physicians]"
                      name="all_primary_care_physicians">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_nurse_practitioners]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_nurse_practitioners]"
                      name="all_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_primary_care_nurse_practitioners]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_primary_care_nurse_practitioners]"
                      name="all_primary_care_nurse_practitioners">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_physician_assistants]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_physician_assistants]"
                      name="all_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_primary_care_physician_assistants]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[all_primary_care_physician_assistants]"
                      name="all_primary_care_physician_assistants">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[all_primary_care_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[state_fips]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output].Columns[state_fips]"
                      name="state_fips"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output].Columns[state_fips]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort All Columns and Delete Perfectly Indentical Rows"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[region]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="region"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[region]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[region_code]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="region_code"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[region_code]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[period]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="period"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[period]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[state_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="state_fips"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">11</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[county_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="county_fips"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="fips"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[fips]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[all_providers]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_providers]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[all_primary_care_providers]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_providers"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_providers]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[all_physicians]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physicians]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">5</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[all_primary_care_physicians]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_physicians"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physicians]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">6</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[all_nurse_practitioners]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_nurse_practitioners]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">7</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[all_primary_care_nurse_practitioners]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_nurse_practitioners"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_nurse_practitioners]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">8</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[all_physician_assistants]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physician_assistants]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">9</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[all_primary_care_physician_assistants]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="all_primary_care_physician_assistants"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physician_assistants]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">10</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input].Columns[IsState]"
                      cachedDataType="wstr"
                      cachedLength="1"
                      cachedName="IsState"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Output].Columns[IsState]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[region]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[region]"
                      name="region">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[region_code]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[region_code]"
                      name="region_code">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[region_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[period]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[period]"
                      name="period"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[period]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[state_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[state_fips]"
                      name="state_fips"
                      sortKeyPosition="11">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[state_fips]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[county_fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[county_fips]"
                      name="county_fips">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[fips]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[fips]"
                      name="fips"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[fips]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_providers]"
                      name="all_providers"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_primary_care_providers]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_primary_care_providers]"
                      name="all_primary_care_providers"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_providers]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_physicians]"
                      name="all_physicians"
                      sortKeyPosition="5">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_primary_care_physicians]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_primary_care_physicians]"
                      name="all_primary_care_physicians"
                      sortKeyPosition="6">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physicians]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_nurse_practitioners]"
                      name="all_nurse_practitioners"
                      sortKeyPosition="7">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_primary_care_nurse_practitioners]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_primary_care_nurse_practitioners]"
                      name="all_primary_care_nurse_practitioners"
                      sortKeyPosition="8">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_nurse_practitioners]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_physician_assistants]"
                      name="all_physician_assistants"
                      sortKeyPosition="9">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_primary_care_physician_assistants]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[all_primary_care_physician_assistants]"
                      name="all_primary_care_physician_assistants"
                      sortKeyPosition="10">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[all_primary_care_physician_assistants]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[IsState]"
                      dataType="wstr"
                      length="1"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output].Columns[IsState]"
                      name="IsState">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Output].Columns[IsState]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Split data on county data"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Inputs[Conditional Split Input].Columns[IsState]"
                      cachedDataType="wstr"
                      cachedLength="1"
                      cachedName="IsState"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Output].Columns[IsState]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Outputs[State]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="State"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Output].Columns[IsState]} == "T"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">IsState == "T"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Outputs[County]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="County"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Output].Columns[IsState]} == "F"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">IsState == "F"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Verify data for NULL rows"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Inputs[Conditional Split Input].Columns[county_fips]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="county_fips"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Outputs[CountyData]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="CountyData"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEN](#{Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output].Columns[county_fips]}) &gt; 0</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEN(county_fips) &gt; 0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Aggregate Output 1]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Inputs[Sort Input]"
              name="Aggregate Output 1"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Aggregate Output 11]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Left Input]"
              name="Aggregate Output 1"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[County]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Inputs[Conditional Split Input]"
              name="County"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Outputs[County]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[CountyData]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Inputs[Sort Input]"
              name="CountyData"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows.Outputs[CountyData]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Data Conversion Output]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Inputs[Sort Input]"
              name="Data Conversion Output"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Derived Column Output]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Inputs[Conditional Split Input]"
              name="Derived Column Output"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Outputs[Derived Column Output]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Derived Column Output1]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Outputs[Derived Column Output]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Derived Column Output2]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Inputs[Conditional Split Input]"
              name="Derived Column Output"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Fail]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records.Inputs[Flat File Destination Input]"
              name="Fail"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Outputs[Fail]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Merge Join Output1]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched.Inputs[Derived Column Input]"
              name="Merge Join Output"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Outputs[Merge Join Output]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Merge Join Output]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data.Inputs[Derived Column Input]"
              name="Merge Join Output"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Outputs[Merge Join Output]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Multicast Output 1]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns.Inputs[Aggregate Input 1]"
              name="Multicast Output 1"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Multicast Output 2]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Inputs[Sort Input]"
              name="Multicast Output 2"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Multicast.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[OLE DB Source Output]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Output]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Multicast.Inputs[Multicast Input 1]"
              name="Output"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Outputs[Output]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Sort Output]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Sort.Outputs[Sort Output]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Sort Output1]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1.Outputs[Sort Output]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Sort Output2]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2.Outputs[Sort Output]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Sort Output3]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows.Inputs[Input]"
              name="Sort Output"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows.Outputs[Sort Output]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[State]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns.Inputs[Data Conversion Input]"
              name="State"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data.Outputs[State]" />
            <path
              refId="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Success]"
              endId="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips.Inputs[Aggregate Input 1]"
              name="Success"
              startId="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success.Outputs[Success]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{E12DACD6-E336-4D9D-BF78-CBD2492F076A}"
      DTS:From="Package\Move Data from Staging Table to Region and County Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Move data from Staging Table to SKA_State_County_Data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{10BD722A-6092-4F03-9477-80D44801D613}"
      DTS:From="Package\Move Data from CSV to a Staging Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Move Data from Staging Table to Region and County Tables" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="266,42"
          Id="Package\Move Data from CSV to a Staging Table"
          TopLeft="203,20" />
        <NodeLayout
          Size="362,42"
          Id="Package\Move Data from Staging Table to Region and County Tables"
          TopLeft="158,116" />
        <NodeLayout
          Size="352,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data"
          TopLeft="159,225" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="337,158">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67"
              Start="0,0"
              End="0,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="337.5,62">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Move Data from CSV to a Staging Table">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="208,42"
          Id="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table"
          TopLeft="431,171" />
        <NodeLayout
          Size="144,42"
          Id="Package\Move Data from CSV to a Staging Table\Read CSV File"
          TopLeft="464,73" />
        <EdgeLayout
          Id="Package\Move Data from CSV to a Staging Table.Paths[Flat File Source Output]"
          TopLeft="535.5,115">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Move Data from CSV to a Staging Table\Send Data to Staging Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Move Data from Staging Table to Region and County Tables">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="335,42"
          Id="Package\Move Data from Staging Table to Region and County Tables\Remove Rows with NULL valuesin County_fips Column"
          TopLeft="481.5,180.5" />
        <NodeLayout
          Size="202,42"
          Id="Package\Move Data from Staging Table to Region and County Tables\Group by County Columns"
          TopLeft="410,293" />
        <NodeLayout
          Size="205,42"
          Id="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table"
          TopLeft="161.333333333333,346.444444444444" />
        <NodeLayout
          Size="197,42"
          Id="Package\Move Data from Staging Table to Region and County Tables\Group the State Columns"
          TopLeft="158.111111111111,267.666666666667" />
        <NodeLayout
          Size="234,42"
          Id="Package\Move Data from Staging Table to Region and County Tables\Typecast the county_fips column"
          TopLeft="701.444444444444,287.888888888889" />
        <NodeLayout
          Size="202,42"
          Id="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data"
          TopLeft="971.888888888889,292.555555555556" />
        <NodeLayout
          Size="263,42"
          Id="Package\Move Data from Staging Table to Region and County Tables\Check IsState Comumn Value and Split"
          TopLeft="135,185" />
        <NodeLayout
          Size="197,42"
          Id="Package\Move Data from Staging Table to Region and County Tables\Generate IsState Column"
          TopLeft="165,108" />
        <NodeLayout
          Size="221,42"
          Id="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table"
          TopLeft="158,33" />
        <EdgeLayout
          Id="Package\Move Data from Staging Table to Region and County Tables.Paths[State]"
          TopLeft="266.5,227">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.88888888888903,40.666666666667"
              Start="0,0"
              End="-9.88888888888903,33.166666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.3333333333335" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.3333333333335"
                    Point2="0,20.3333333333335"
                    Point3="-4,20.3333333333335" />
                  <mssgle:LineSegment
                    End="-5.88888888888903,20.3333333333335" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.88888888888903,20.3333333333335"
                    Point2="-9.88888888888903,20.3333333333335"
                    Point3="-9.88888888888903,24.3333333333335" />
                  <mssgle:LineSegment
                    End="-9.88888888888903,33.166666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-17.0064561631945,25.3333333333335,24.1240234375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move Data from Staging Table to Region and County Tables.Paths[OLE DB Source Output]"
          TopLeft="266,75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move Data from Staging Table to Region and County Tables.Paths[Derived Column Output]"
          TopLeft="265,150">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move Data from Staging Table to Region and County Tables.Paths[Data Conversion Output]"
          TopLeft="935.444444444444,311.222222222223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="36.4444444444451,0"
              Start="0,0"
              End="28.9444444444451,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.9444444444451,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move Data from Staging Table to Region and County Tables.Paths[County1]"
          TopLeft="649,222.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-138,70.5"
              Start="0,0"
              End="-138,63">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.25"
                    Point2="0,35.25"
                    Point3="-4,35.25" />
                  <mssgle:LineSegment
                    End="-134,35.25" />
                  <mssgle:CubicBezierSegment
                    Point1="-134,35.25"
                    Point2="-138,35.25"
                    Point3="-138,39.25" />
                  <mssgle:LineSegment
                    End="-138,63" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-85.284453125,40.25,32.56890625,11.4140625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move Data from Staging Table to Region and County Tables.Paths[County]"
          TopLeft="398,203.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="83.5,0"
              Start="0,0"
              End="76,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="76,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="21.715546875,5,32.56890625,11.4140625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move Data from Staging Table to Region and County Tables.Paths[Aggregate Output 11]"
          TopLeft="612,311.444444444445">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="89.444444444444,0"
              Start="0,0"
              End="81.944444444444,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="81.944444444444,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move Data from Staging Table to Region and County Tables.Paths[Aggregate Output 1]"
          TopLeft="260.222222222222,309.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.777777777777"
              Start="0,0"
              End="0,29.277777777777">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.277777777777" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Move Data from Staging Table to Region and County Tables\Send Data to Region Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Move Data from Staging Table to Region and County Tables\Send Data to County Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Move Data from Staging Table to Region and County Tables\Read Data from Staging Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Move data from Staging Table to SKA_State_County_Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="280,43"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Check type of data and derive new column"
          TopLeft="49.5,76.5" />
        <NodeLayout
          Size="107,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Sort 1"
          TopLeft="819,225" />
        <NodeLayout
          Size="220,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table"
          TopLeft="80.5,8.3709677419355" />
        <NodeLayout
          Size="107,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Sort 2"
          TopLeft="584,421" />
        <NodeLayout
          Size="120,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Multicast"
          TopLeft="735,330" />
        <NodeLayout
          Size="242,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Inner join on Period and state_fips"
          TopLeft="792,422" />
        <NodeLayout
          Size="200,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Verify data for NULL rows"
          TopLeft="87,217" />
        <NodeLayout
          Size="185,82"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Group by State_fips &amp; Year and sum all other value columns"
          TopLeft="894,277" />
        <NodeLayout
          Size="197,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Split data on county data"
          TopLeft="86,148" />
        <NodeLayout
          Size="168,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Log Failed Records"
          TopLeft="991,486" />
        <NodeLayout
          Size="139,57"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Group by Year and State_fips"
          TopLeft="1108,412" />
        <NodeLayout
          Size="284,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Script to remove the partially identical rows"
          TopLeft="401,324" />
        <NodeLayout
          Size="255,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Inner Join based on state_fips &amp; year"
          TopLeft="763,155" />
        <NodeLayout
          Size="259,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data"
          TopLeft="788,550" />
        <NodeLayout
          Size="227,89"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Check if the sum of county data matches state data and derieve a new column NotMatched"
          TopLeft="1064,92" />
        <NodeLayout
          Size="230,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Data Conversion of all Columns"
          TopLeft="334,152" />
        <NodeLayout
          Size="98,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Sort"
          TopLeft="597,153" />
        <NodeLayout
          Size="333,43"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Sort All Columns and Delete Perfectly Indentical Rows"
          TopLeft="22,292" />
        <NodeLayout
          Size="269,42"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\Add InsertDateTime Column to the Data"
          TopLeft="470,551" />
        <NodeLayout
          Size="193,77"
          Id="Package\Move data from Staging Table to SKA_State_County_Data\If NotMatched is True then Failed else Success"
          TopLeft="1098,236" />
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[CountyData]"
          TopLeft="187.75,259">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.29587890625,7.04296875,52.5917578125,11.4140625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[County]"
          TopLeft="185.75,190">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-16.284453125,4.04296875,32.56890625,11.4140625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Aggregate Output 11]"
          TopLeft="1108,441.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-74,0"
              Start="0,0"
              End="-66.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-66.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Aggregate Output 1]"
          TopLeft="894,305.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-21.5,-38.6666666666667"
              Start="0,0"
              End="-21.5,-31.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-17.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-17.5,0"
                    Point2="-21.5,0"
                    Point3="-21.5,-4" />
                  <mssgle:LineSegment
                    End="-21.5,-31.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Success]"
          TopLeft="1225.33333333333,313">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-47.8333333333333,99"
              Start="0,0"
              End="-47.8333333333333,91.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.0883864337102" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.0883864337102"
                    Point2="0,40.0883864337102"
                    Point3="-4,40.0883864337102" />
                  <mssgle:LineSegment
                    End="-43.8333333333333,40.0883864337102" />
                  <mssgle:CubicBezierSegment
                    Point1="-43.8333333333333,40.0883864337102"
                    Point2="-47.8333333333333,40.0883864337102"
                    Point3="-47.8333333333333,44.0883864337102" />
                  <mssgle:LineSegment
                    End="-47.8333333333333,91.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-41.9099088541666,45.0883864337102,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[State]"
          TopLeft="283,171">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="51,0"
              Start="0,0"
              End="43.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="43.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="9.68798828125,5,24.1240234375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Sort Output3]"
          TopLeft="355,313.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="46,31.5"
              Start="0,0"
              End="38.5,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19,0" />
                  <mssgle:CubicBezierSegment
                    Point1="19,0"
                    Point2="23,0"
                    Point3="23,4" />
                  <mssgle:LineSegment
                    End="23,27.5" />
                  <mssgle:CubicBezierSegment
                    Point1="23,27.5"
                    Point2="23,31.5"
                    Point3="27,31.5" />
                  <mssgle:LineSegment
                    End="38.5,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Sort Output2]"
          TopLeft="691,442.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="101,0"
              Start="0,0"
              End="93.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="93.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Sort Output1]"
          TopLeft="872.5,225">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="18,-28"
              Start="0,0"
              End="18,-20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-10" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-10"
                    Point2="0,-14"
                    Point3="4,-14" />
                  <mssgle:LineSegment
                    End="14,-14" />
                  <mssgle:CubicBezierSegment
                    Point1="14,-14"
                    Point2="18,-14"
                    Point3="18,-18" />
                  <mssgle:LineSegment
                    End="18,-20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Sort Output]"
          TopLeft="695,175">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="68,0"
              Start="0,0"
              End="60.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="60.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Output]"
          TopLeft="685,348">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="50,0"
              Start="0,0"
              End="42.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="42.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[OLE DB Source Output]"
          TopLeft="190,50.3709677419355">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.1290322580645"
              Start="0,0"
              End="0,18.6290322580645">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6290322580645" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Multicast Output 2]"
          TopLeft="795,372">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-157.5,49"
              Start="0,0"
              End="-157.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-153.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-153.5,24.5"
                    Point2="-157.5,24.5"
                    Point3="-157.5,28.5" />
                  <mssgle:LineSegment
                    End="-157.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Multicast Output 1]"
          TopLeft="855,351">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39,-20.6666666666667"
              Start="0,0"
              End="31.5,-20.6666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.9521531100478,0" />
                  <mssgle:CubicBezierSegment
                    Point1="18.9521531100478,0"
                    Point2="22.9521531100478,0"
                    Point3="22.9521531100478,-4" />
                  <mssgle:LineSegment
                    End="22.9521531100478,-16.6666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="22.9521531100478,-16.6666666666667"
                    Point2="22.9521531100478,-20.6666666666667"
                    Point3="26.9521531100478,-20.6666666666667" />
                  <mssgle:LineSegment
                    End="31.5,-20.6666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Merge Join Output1]"
          TopLeft="1018,176">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="46,-39.5"
              Start="0,0"
              End="38.5,-39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19,0" />
                  <mssgle:CubicBezierSegment
                    Point1="19,0"
                    Point2="23,0"
                    Point3="23,-4" />
                  <mssgle:LineSegment
                    End="23,-35.5" />
                  <mssgle:CubicBezierSegment
                    Point1="23,-35.5"
                    Point2="23,-39.5"
                    Point3="27,-39.5" />
                  <mssgle:LineSegment
                    End="38.5,-39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Merge Join Output]"
          TopLeft="913,464">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-308.5,87"
              Start="0,0"
              End="-308.5,79.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.5"
                    Point2="0,43.5"
                    Point3="-4,43.5" />
                  <mssgle:LineSegment
                    End="-304.5,43.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-304.5,43.5"
                    Point2="-308.5,43.5"
                    Point3="-308.5,47.5" />
                  <mssgle:LineSegment
                    End="-308.5,79.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Fail]"
          TopLeft="1163.66666666667,313">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-88.6666666666667,173"
              Start="0,0"
              End="-88.6666666666667,165.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.0534429599178" />
                  <mssgle:CubicBezierSegment
                    Point1="0,66.0534429599178"
                    Point2="0,70.0534429599178"
                    Point3="-4,70.0534429599178" />
                  <mssgle:LineSegment
                    End="-84.6666666666667,70.0534429599178" />
                  <mssgle:CubicBezierSegment
                    Point1="-84.6666666666667,70.0534429599178"
                    Point2="-88.6666666666667,70.0534429599178"
                    Point3="-88.6666666666667,74.0534429599178" />
                  <mssgle:LineSegment
                    End="-88.6666666666667,165.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-52.1404622395834,75.0534429599178,15.6142578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Derived Column Output2]"
          TopLeft="187,119.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.5"
              Start="0,0"
              End="0,21">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Derived Column Output1]"
          TopLeft="739,571.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49,0"
              Start="0,0"
              End="41.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Derived Column Output]"
          TopLeft="1177.5,181">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="17,55"
              Start="0,0"
              End="17,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.5"
                    Point2="0,27.5"
                    Point3="4,27.5" />
                  <mssgle:LineSegment
                    End="13,27.5" />
                  <mssgle:CubicBezierSegment
                    Point1="13,27.5"
                    Point2="17,27.5"
                    Point3="17,31.5" />
                  <mssgle:LineSegment
                    End="17,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move data from Staging Table to SKA_State_County_Data.Paths[Data Conversion Output]"
          TopLeft="564,173.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33,0"
              Start="0,0"
              End="25.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="25.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Move data from Staging Table to SKA_State_County_Data\Read data from Staging Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Move data from Staging Table to SKA_State_County_Data\Send Data to SKA_State_County_Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>